package GUI;

import ClasesBase.GestorEstilos;
import ClasesBase.MensajesValidaciones;
import ClasesBase.modelo.*;
import DAO.DAOObraSocial;
import DAO.DAOPaciente;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.text.BadLocationException;

public class ABMPacienteCompleto extends javax.swing.JFrame {
    private Frame padre;
    private Principal padreP;
    private HistoriaClinica hc;
    private DAOPaciente daoPaciente;
    private Paciente p;
    private DAOObraSocial daoObraSocial;
    private LinkedList<ObraSocial> obras;
    private AntecedentesFamiliares af;
    private AntecedentesGenerales agen;
    private AntecedentesGinecologicos aginec;
    private int procedencia;
    private long dniOriginal;
    private int idObraSocialOriginal;
    private String nroAfiliadoOriginal;
    private String tiroidesAux = "", oncologógicosAux = "";
    
    /**
     * Creates new form DatosPaciente
     */
    public ABMPacienteCompleto(java.awt.Frame parent, boolean modal,int procedencia) {     //procedencia: 0 principal nuevo, 
        initComponents();
        ComboBoxEditor editor = cmbObraSocial.getEditor();
        JTextField etf = (JTextField) editor.getEditorComponent();
        etf.setDisabledTextColor(GestorEstilos.getColorTexto());
        etf.setBackground(GestorEstilos.getColorTerciario());
        txtfNumeroAfiliado.setDisabledTextColor(GestorEstilos.getColorTexto());
        this.btnModificar.setVisible(false);
        this.btnModificar.setEnabled(false);
        daoPaciente = new DAOPaciente();
        daoObraSocial = new DAOObraSocial();
        obras = new LinkedList<>();
        this.procedencia = procedencia;
        llenarObrasSociales();
        if(procedencia == 0 || procedencia == 1)
        {
        padreP = (Principal) parent;
        padre = padreP;
        }
        else if(procedencia == 2)
        {
        hc = (HistoriaClinica) parent;
        padre = hc;
        }
        setIconImage(getIconImage());
        ClasesBase.GestorEstilos.pintar(this);
        this.setExtendedState(parent.getExtendedState());
        this.setLocationRelativeTo(parent);//Mantener siempre debajo del anterior if
        //eventos de la página
        KeyStroke strokeEsc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        this.getRootPane().registerKeyboardAction(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    salir();
                }
            }, strokeEsc, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
    
    public ABMPacienteCompleto(java.awt.Frame parent, boolean modal,int procedencia, Paciente p) {
        initComponents();
        ComboBoxEditor editor = cmbObraSocial.getEditor();
        JTextField etf = (JTextField) editor.getEditorComponent();
        etf.setDisabledTextColor(GestorEstilos.getColorTexto());
        etf.setBackground(GestorEstilos.getColorTerciario());
        txtfNumeroAfiliado.setDisabledTextColor(GestorEstilos.getColorTexto());
        daoPaciente = new DAOPaciente();
        daoObraSocial = new DAOObraSocial();
        obras = new LinkedList<>();
        this.procedencia = procedencia;
        llenarObrasSociales();
        if(procedencia == 1)
             { 
             llenarCajas(p);
             this.p = p;
             dniOriginal = Long.parseLong(this.txtfDni.getText());
             padreP = (Principal) parent;
             padre = padreP;
             }

        else if(procedencia == 2)
        {
        this.btnModificar.setVisible(false);
        hc = (HistoriaClinica) parent;
        llenarCajas(p);
        this.p = p;
        dniOriginal = Long.parseLong(this.txtfDni.getText());
        if (p.getObraSocial() != null)
            nroAfiliadoOriginal = p.getNumeroAfiliado();
        }
        
        this.setLocationRelativeTo(parent);
        setIconImage(getIconImage());
        ClasesBase.GestorEstilos.pintar(this);
        this.setExtendedState(parent.getExtendedState());
        this.setLocationRelativeTo(parent);//Mantener siempre debajo del anterior if
        //eventos de la página
        KeyStroke strokeEsc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        this.getRootPane().registerKeyboardAction(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    salir();
                }
            }, strokeEsc, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpSangre = new javax.swing.ButtonGroup();
        tabbedPaneAntecedentes = new javax.swing.JTabbedPane();
        pnlGenerales = new javax.swing.JPanel();
        pnlPersonales = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtaPersonales = new javax.swing.JTextArea();
        pnlQuirurgicos = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtaQuirurgicos = new javax.swing.JTextArea();
        pnlToxicos = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtaToxicos = new javax.swing.JTextArea();
        pnlGinecologicos = new javax.swing.JPanel();
        pnlObservacionesGinec = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaGinecObserv = new javax.swing.JTextArea();
        pnlGinecologicos1 = new javax.swing.JPanel();
        lblstaticMenarca = new javax.swing.JLabel();
        lblstaticTelarca = new javax.swing.JLabel();
        lblstaticCiclosMens = new javax.swing.JLabel();
        lblstaticGestaciones = new javax.swing.JLabel();
        lblstaticMenopausia1 = new javax.swing.JLabel();
        lblstaticPartos = new javax.swing.JLabel();
        lblstaticAnticoncep = new javax.swing.JLabel();
        lblstaticGinecObserv = new javax.swing.JLabel();
        txtfMenopausia = new javax.swing.JTextField();
        txtfTelarca = new javax.swing.JTextField();
        txtfMenarca = new javax.swing.JTextField();
        txtfAbortos = new javax.swing.JTextField();
        txtfCesareas = new javax.swing.JTextField();
        lblstaticSeparador6 = new javax.swing.JLabel();
        txtfPartos = new javax.swing.JTextField();
        lblstaticSeparador7 = new javax.swing.JLabel();
        txtfGestaciones = new javax.swing.JTextField();
        lblstaticSeparador8 = new javax.swing.JLabel();
        txtfVivos = new javax.swing.JTextField();
        txtfMuertos = new javax.swing.JTextField();
        txtfDuracionMenstrual = new javax.swing.JTextField();
        txtfPeriodoMenstrual = new javax.swing.JTextField();
        lblstaticSeparador9 = new javax.swing.JLabel();
        chkDispareunia = new javax.swing.JCheckBox();
        chkDismenorrea = new javax.swing.JCheckBox();
        chkSdpm = new javax.swing.JCheckBox();
        txtfAnticonceptivos = new javax.swing.JTextField();
        pnlFamiliares = new javax.swing.JPanel();
        pnlObservacionesFam = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaFamObservaciones = new javax.swing.JTextArea();
        pnlAntecedentes = new javax.swing.JPanel();
        txtfTiroides = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtaOncologicos = new javax.swing.JTextArea();
        chkDiabetes = new javax.swing.JCheckBox();
        chkTiroides = new javax.swing.JCheckBox();
        chkHipertension = new javax.swing.JCheckBox();
        chkOncologicos = new javax.swing.JCheckBox();
        pnlDatosPersonales = new javax.swing.JPanel();
        lblstaticNombres = new javax.swing.JLabel();
        lblstaticApellidos = new javax.swing.JLabel();
        lblstaticTelefono = new javax.swing.JLabel();
        lblstaticFechaNacimiento = new javax.swing.JLabel();
        txtfNombres = new javax.swing.JTextField();
        txtfApellidos = new javax.swing.JTextField();
        txtfTelefono = new javax.swing.JTextField();
        txtfDni = new javax.swing.JTextField();
        lblstaticTelefono1 = new javax.swing.JLabel();
        ftxtfFechaNacimiento = new javax.swing.JFormattedTextField();
        lblstaticGrupoS = new javax.swing.JLabel();
        rbtnFactorPos = new javax.swing.JRadioButton();
        rbtnFactorNeg = new javax.swing.JRadioButton();
        lblstaticFactor = new javax.swing.JLabel();
        cmbGrupoS = new javax.swing.JComboBox();
        pnlObraSocial = new javax.swing.JPanel();
        cmbObraSocial = new javax.swing.JComboBox();
        btnNuevaObraSocial = new javax.swing.JButton();
        lblstaticNumAfiliado = new javax.swing.JLabel();
        txtfNumeroAfiliado = new javax.swing.JTextField();
        btnGuardarOS = new javax.swing.JButton();
        txtfNuevaObraSocial = new javax.swing.JTextField();
        btnCancelarOS = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Nuevo Paciente");
        setIconImages(getIconImages());
        setMinimumSize(getPreferredSize());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabbedPaneAntecedentes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Antecedentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        tabbedPaneAntecedentes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabbedPaneAntecedentes.setOpaque(true);
        tabbedPaneAntecedentes.setPreferredSize(new java.awt.Dimension(500, 300));

        pnlGenerales.setNextFocusableComponent(txtaPersonales);

        pnlPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 102))); // NOI18N

        txtaPersonales.setColumns(20);
        txtaPersonales.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaPersonales.setLineWrap(true);
        txtaPersonales.setRows(5);
        txtaPersonales.setTabSize(0);
        txtaPersonales.setWrapStyleWord(true);
        txtaPersonales.setNextFocusableComponent(txtaQuirurgicos);
        txtaPersonales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaPersonalesKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(txtaPersonales);

        javax.swing.GroupLayout pnlPersonalesLayout = new javax.swing.GroupLayout(pnlPersonales);
        pnlPersonales.setLayout(pnlPersonalesLayout);
        pnlPersonalesLayout.setHorizontalGroup(
            pnlPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );
        pnlPersonalesLayout.setVerticalGroup(
            pnlPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
        );

        pnlQuirurgicos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Quirúrgicos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 102))); // NOI18N

        txtaQuirurgicos.setColumns(20);
        txtaQuirurgicos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaQuirurgicos.setLineWrap(true);
        txtaQuirurgicos.setRows(5);
        txtaQuirurgicos.setTabSize(0);
        txtaQuirurgicos.setWrapStyleWord(true);
        txtaQuirurgicos.setNextFocusableComponent(txtaToxicos);
        txtaQuirurgicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaQuirurgicosKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(txtaQuirurgicos);

        javax.swing.GroupLayout pnlQuirurgicosLayout = new javax.swing.GroupLayout(pnlQuirurgicos);
        pnlQuirurgicos.setLayout(pnlQuirurgicosLayout);
        pnlQuirurgicosLayout.setHorizontalGroup(
            pnlQuirurgicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );
        pnlQuirurgicosLayout.setVerticalGroup(
            pnlQuirurgicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
        );

        pnlToxicos.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Tóxicos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 102))); // NOI18N

        txtaToxicos.setColumns(20);
        txtaToxicos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaToxicos.setLineWrap(true);
        txtaToxicos.setRows(5);
        txtaToxicos.setTabSize(0);
        txtaToxicos.setWrapStyleWord(true);
        txtaToxicos.setNextFocusableComponent(txtfMenarca);
        txtaToxicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaToxicosKeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(txtaToxicos);

        javax.swing.GroupLayout pnlToxicosLayout = new javax.swing.GroupLayout(pnlToxicos);
        pnlToxicos.setLayout(pnlToxicosLayout);
        pnlToxicosLayout.setHorizontalGroup(
            pnlToxicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
        );
        pnlToxicosLayout.setVerticalGroup(
            pnlToxicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlGeneralesLayout = new javax.swing.GroupLayout(pnlGenerales);
        pnlGenerales.setLayout(pnlGeneralesLayout);
        pnlGeneralesLayout.setHorizontalGroup(
            pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPersonales, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlQuirurgicos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlToxicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlGeneralesLayout.setVerticalGroup(
            pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPersonales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlQuirurgicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlToxicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneAntecedentes.addTab("Generales", pnlGenerales);

        pnlGinecologicos.setNextFocusableComponent(txtfMenarca);

        pnlObservacionesGinec.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        txtaGinecObserv.setColumns(20);
        txtaGinecObserv.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaGinecObserv.setLineWrap(true);
        txtaGinecObserv.setRows(5);
        txtaGinecObserv.setTabSize(0);
        txtaGinecObserv.setWrapStyleWord(true);
        txtaGinecObserv.setNextFocusableComponent(pnlFamiliares);
        txtaGinecObserv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaGinecObservKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtaGinecObserv);

        javax.swing.GroupLayout pnlObservacionesGinecLayout = new javax.swing.GroupLayout(pnlObservacionesGinec);
        pnlObservacionesGinec.setLayout(pnlObservacionesGinecLayout);
        pnlObservacionesGinecLayout.setHorizontalGroup(
            pnlObservacionesGinecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        pnlObservacionesGinecLayout.setVerticalGroup(
            pnlObservacionesGinecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        pnlGinecologicos1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Antecedentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        lblstaticMenarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticMenarca.setText("Menarca:");

        lblstaticTelarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticTelarca.setText("Telarca:");

        lblstaticCiclosMens.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticCiclosMens.setText(" Ciclos Menstruales:");

        lblstaticGestaciones.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticGestaciones.setText("Gestaciones/Abortos:");

        lblstaticMenopausia1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticMenopausia1.setText("Menopausia:");

        lblstaticPartos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticPartos.setText("Partos/Cesáreas:");

        lblstaticAnticoncep.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticAnticoncep.setText(" Anticonceptivos: ");
        lblstaticAnticoncep.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblstaticGinecObserv.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticGinecObserv.setText("Vivos/Muertos:");

        txtfMenopausia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfMenopausia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMenopausiaKeyTyped(evt);
            }
        });

        txtfTelarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfTelarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTelarcaKeyTyped(evt);
            }
        });

        txtfMenarca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfMenarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMenarcaKeyTyped(evt);
            }
        });

        txtfAbortos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfAbortos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfAbortosKeyTyped(evt);
            }
        });

        txtfCesareas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfCesareas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfCesareasKeyTyped(evt);
            }
        });

        lblstaticSeparador6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticSeparador6.setText("/");

        txtfPartos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfPartos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfPartosKeyTyped(evt);
            }
        });

        lblstaticSeparador7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticSeparador7.setText("/");

        txtfGestaciones.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfGestaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfGestacionesKeyTyped(evt);
            }
        });

        lblstaticSeparador8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticSeparador8.setText("/");

        txtfVivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfVivos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfVivosKeyTyped(evt);
            }
        });

        txtfMuertos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfMuertos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMuertosKeyTyped(evt);
            }
        });

        txtfDuracionMenstrual.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfDuracionMenstrual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfDuracionMenstrualKeyTyped(evt);
            }
        });

        txtfPeriodoMenstrual.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfPeriodoMenstrual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfPeriodoMenstrualKeyTyped(evt);
            }
        });

        lblstaticSeparador9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticSeparador9.setText("/");

        chkDispareunia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkDispareunia.setText("Dispareunia         ");
        chkDispareunia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chkDispareunia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkDispareunia.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkDispareunia.setIconTextGap(20);
        chkDispareunia.setOpaque(false);
        chkDispareunia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDispareuniaItemStateChanged(evt);
            }
        });

        chkDismenorrea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkDismenorrea.setText("Dismenorrea       ");
        chkDismenorrea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chkDismenorrea.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkDismenorrea.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkDismenorrea.setIconTextGap(20);
        chkDismenorrea.setOpaque(false);
        chkDismenorrea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDismenorreaItemStateChanged(evt);
            }
        });

        chkSdpm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkSdpm.setText("SDPM                 ");
        chkSdpm.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chkSdpm.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkSdpm.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkSdpm.setIconTextGap(20);
        chkSdpm.setOpaque(false);
        chkSdpm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkSdpmItemStateChanged(evt);
            }
        });

        txtfAnticonceptivos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfAnticonceptivos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfAnticonceptivosKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlGinecologicos1Layout = new javax.swing.GroupLayout(pnlGinecologicos1);
        pnlGinecologicos1.setLayout(pnlGinecologicos1Layout);
        pnlGinecologicos1Layout.setHorizontalGroup(
            pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblstaticTelarca)
                    .addComponent(lblstaticMenopausia1)
                    .addComponent(lblstaticPartos, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticGestaciones)
                    .addComponent(lblstaticGinecObserv)
                    .addComponent(lblstaticMenarca))
                .addGap(18, 18, 18)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtfTelarca)
                    .addComponent(txtfMenopausia)
                    .addComponent(txtfMenarca)
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtfPartos)
                                .addComponent(txtfGestaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                            .addComponent(txtfVivos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticSeparador7, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticSeparador6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticSeparador8, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtfCesareas)
                                .addComponent(txtfAbortos, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                            .addComponent(txtfMuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)))
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkDispareunia)
                            .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                                .addComponent(lblstaticCiclosMens)
                                .addGap(10, 10, 10)
                                .addComponent(txtfDuracionMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblstaticSeparador9, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfPeriodoMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(chkSdpm, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                .addComponent(chkDismenorrea, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(4, 4, 4))
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(lblstaticAnticoncep, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtfAnticonceptivos)))
                .addContainerGap())
        );
        pnlGinecologicos1Layout.setVerticalGroup(
            pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfMenarca)
                    .addComponent(txtfPeriodoMenstrual)
                    .addComponent(txtfDuracionMenstrual)
                    .addComponent(lblstaticMenarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblstaticCiclosMens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblstaticSeparador9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfTelarca)
                    .addComponent(lblstaticTelarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkDispareunia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfMenopausia)
                    .addComponent(lblstaticMenopausia1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkDismenorrea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtfPartos))
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblstaticSeparador6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlGinecologicos1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtfCesareas))
                    .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblstaticPartos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkSdpm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticGestaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfGestaciones)
                    .addComponent(lblstaticSeparador7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfAbortos)
                    .addComponent(lblstaticAnticoncep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfAnticonceptivos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGinecologicos1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfVivos)
                    .addComponent(lblstaticSeparador8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfMuertos)
                    .addComponent(lblstaticGinecObserv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout pnlGinecologicosLayout = new javax.swing.GroupLayout(pnlGinecologicos);
        pnlGinecologicos.setLayout(pnlGinecologicosLayout);
        pnlGinecologicosLayout.setHorizontalGroup(
            pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGinecologicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlGinecologicos1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 536, Short.MAX_VALUE)
                    .addComponent(pnlObservacionesGinec, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlGinecologicosLayout.setVerticalGroup(
            pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGinecologicos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlObservacionesGinec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPaneAntecedentes.addTab("Ginecológicos", pnlGinecologicos);

        pnlFamiliares.setNextFocusableComponent(chkDiabetes);
        pnlFamiliares.setLayout(new java.awt.BorderLayout());

        pnlObservacionesFam.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        txtaFamObservaciones.setColumns(20);
        txtaFamObservaciones.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaFamObservaciones.setLineWrap(true);
        txtaFamObservaciones.setRows(5);
        txtaFamObservaciones.setTabSize(0);
        txtaFamObservaciones.setWrapStyleWord(true);
        txtaFamObservaciones.setNextFocusableComponent(btnGuardar);
        txtaFamObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaFamObservacionesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtaFamObservaciones);

        javax.swing.GroupLayout pnlObservacionesFamLayout = new javax.swing.GroupLayout(pnlObservacionesFam);
        pnlObservacionesFam.setLayout(pnlObservacionesFamLayout);
        pnlObservacionesFamLayout.setHorizontalGroup(
            pnlObservacionesFamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );
        pnlObservacionesFamLayout.setVerticalGroup(
            pnlObservacionesFamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
        );

        pnlFamiliares.add(pnlObservacionesFam, java.awt.BorderLayout.CENTER);

        pnlAntecedentes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Antecedentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        txtfTiroides.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfTiroides.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTiroidesKeyTyped(evt);
            }
        });

        txtaOncologicos.setColumns(16);
        txtaOncologicos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaOncologicos.setLineWrap(true);
        txtaOncologicos.setRows(2);
        txtaOncologicos.setTabSize(0);
        txtaOncologicos.setWrapStyleWord(true);
        txtaOncologicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaOncologicosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(txtaOncologicos);

        chkDiabetes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkDiabetes.setText("Diabetes");
        chkDiabetes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkDiabetes.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkDiabetes.setIconTextGap(73);
        chkDiabetes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkDiabetesItemStateChanged(evt);
            }
        });

        chkTiroides.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkTiroides.setText("Tiroides");
        chkTiroides.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkTiroides.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkTiroides.setIconTextGap(80);
        chkTiroides.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkTiroidesItemStateChanged(evt);
            }
        });

        chkHipertension.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkHipertension.setText("Hipertensión Arterial");
        chkHipertension.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkHipertension.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkHipertension.setIconTextGap(6);
        chkHipertension.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkHipertensionItemStateChanged(evt);
            }
        });

        chkOncologicos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkOncologicos.setText("Oncológicos");
        chkOncologicos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkOncologicos.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkOncologicos.setIconTextGap(52);
        chkOncologicos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkOncologicosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlAntecedentesLayout = new javax.swing.GroupLayout(pnlAntecedentes);
        pnlAntecedentes.setLayout(pnlAntecedentesLayout);
        pnlAntecedentesLayout.setHorizontalGroup(
            pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(chkHipertension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkDiabetes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkTiroides, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkOncologicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                    .addComponent(txtfTiroides, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlAntecedentesLayout.setVerticalGroup(
            pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(chkDiabetes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkHipertension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addGroup(pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtfTiroides))
                    .addComponent(chkTiroides))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                        .addComponent(chkOncologicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(58, 58, 58))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        pnlFamiliares.add(pnlAntecedentes, java.awt.BorderLayout.PAGE_START);

        tabbedPaneAntecedentes.addTab("Familiares", pnlFamiliares);

        pnlDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        lblstaticNombres.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticNombres.setText("Nombres:");

        lblstaticApellidos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticApellidos.setText("Apellidos:");

        lblstaticTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticTelefono.setText("Teléfono:");

        lblstaticFechaNacimiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticFechaNacimiento.setText("Fecha de Nacimiento:");

        txtfNombres.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNombresKeyTyped(evt);
            }
        });

        txtfApellidos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfApellidosKeyTyped(evt);
            }
        });

        txtfTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTelefonoKeyTyped(evt);
            }
        });

        txtfDni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfDniKeyTyped(evt);
            }
        });

        lblstaticTelefono1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticTelefono1.setText("Nro. Doc.:");

        try {
            ftxtfFechaNacimiento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtfFechaNacimiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblstaticGrupoS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticGrupoS.setText("Grupo Sanguíneo:");

        btngrpSangre.add(rbtnFactorPos);
        rbtnFactorPos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnFactorPos.setText("+");
        rbtnFactorPos.setFocusCycleRoot(true);
        rbtnFactorPos.setNextFocusableComponent(rbtnFactorNeg);
        rbtnFactorPos.setOpaque(false);
        rbtnFactorPos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnFactorPosItemStateChanged(evt);
            }
        });
        rbtnFactorPos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rbtnFactorPosKeyPressed(evt);
            }
        });

        btngrpSangre.add(rbtnFactorNeg);
        rbtnFactorNeg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnFactorNeg.setText("-");
        rbtnFactorNeg.setFocusCycleRoot(true);
        rbtnFactorNeg.setNextFocusableComponent(cmbObraSocial);
        rbtnFactorNeg.setOpaque(false);
        rbtnFactorNeg.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnFactorNegItemStateChanged(evt);
            }
        });

        lblstaticFactor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticFactor.setText("Factor:");

        cmbGrupoS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbGrupoS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "AB", "0" }));
        cmbGrupoS.setFocusCycleRoot(true);
        cmbGrupoS.setNextFocusableComponent(rbtnFactorPos);

        pnlObraSocial.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Obra Social", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlObraSocial.setOpaque(false);

        cmbObraSocial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbObraSocial.setFocusCycleRoot(true);
        cmbObraSocial.setNextFocusableComponent(btnNuevaObraSocial);
        cmbObraSocial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbObraSocialItemStateChanged(evt);
            }
        });

        btnNuevaObraSocial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNuevaObraSocial.setText("Nueva");
        btnNuevaObraSocial.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevaObraSocial.setContentAreaFilled(false);
        btnNuevaObraSocial.setNextFocusableComponent(txtfNumeroAfiliado);
        btnNuevaObraSocial.setOpaque(true);
        btnNuevaObraSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaObraSocialActionPerformed(evt);
            }
        });

        lblstaticNumAfiliado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticNumAfiliado.setText("Nro. Afiliado:");

        txtfNumeroAfiliado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfNumeroAfiliado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtfNumeroAfiliado.setEnabled(false);
        txtfNumeroAfiliado.setNextFocusableComponent(pnlPersonales);
        txtfNumeroAfiliado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNumeroAfiliadoKeyTyped(evt);
            }
        });

        btnGuardarOS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGuardarOS.setText("Guardar");
        btnGuardarOS.setEnabled(false);
        btnGuardarOS.setNextFocusableComponent(btnCancelarOS);
        btnGuardarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarOSActionPerformed(evt);
            }
        });

        txtfNuevaObraSocial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfNuevaObraSocial.setEnabled(false);
        txtfNuevaObraSocial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNuevaObraSocialKeyTyped(evt);
            }
        });

        btnCancelarOS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelarOS.setText("Cancelar");
        btnCancelarOS.setEnabled(false);
        btnCancelarOS.setNextFocusableComponent(cmbObraSocial);
        btnCancelarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarOSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlObraSocialLayout = new javax.swing.GroupLayout(pnlObraSocial);
        pnlObraSocial.setLayout(pnlObraSocialLayout);
        pnlObraSocialLayout.setHorizontalGroup(
            pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlObraSocialLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                                .addComponent(lblstaticNumAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfNumeroAfiliado))
                            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                                .addComponent(cmbObraSocial, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNuevaObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlObraSocialLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtfNuevaObraSocial))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlObraSocialLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGuardarOS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarOS, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlObraSocialLayout.setVerticalGroup(
            pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevaObraSocial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfNuevaObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarOS)
                    .addComponent(btnGuardarOS))
                .addGap(13, 13, 13)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfNumeroAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticNumAfiliado))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlDatosPersonalesLayout = new javax.swing.GroupLayout(pnlDatosPersonales);
        pnlDatosPersonales.setLayout(pnlDatosPersonalesLayout);
        pnlDatosPersonalesLayout.setHorizontalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticTelefono1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtfApellidos)
                            .addComponent(txtfNombres)
                            .addComponent(txtfTelefono)
                            .addComponent(txtfDni)))
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(lblstaticFechaNacimiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ftxtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(lblstaticGrupoS)
                                .addGap(18, 18, 18)
                                .addComponent(cmbGrupoS, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblstaticFactor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFactorPos, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFactorNeg, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(pnlObraSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlDatosPersonalesLayout.setVerticalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfNombres)
                    .addComponent(lblstaticNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfApellidos)
                    .addComponent(lblstaticApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfTelefono)
                    .addComponent(lblstaticTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfDni)
                    .addComponent(lblstaticTelefono1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbGrupoS, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                            .addComponent(lblstaticGrupoS, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)))
                    .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnFactorNeg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblstaticFactor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rbtnFactorPos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(pnlObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnVolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 51, 102));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/home_enabled.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnVolver.setContentAreaFilled(false);
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVolver.setOpaque(true);
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMouseExited(evt);
            }
        });
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 51, 102));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save_enabled.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setOpaque(true);
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 51, 102));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_enabled.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnModificar.setContentAreaFilled(false);
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.setEnabled(false);
        btnModificar.setOpaque(true);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarMouseExited(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPaneAntecedentes, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabbedPaneAntecedentes, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTelefonoKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfTelefono, evt, 45,this);
    }//GEN-LAST:event_txtfTelefonoKeyTyped

    private void txtfDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDniKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfDniKeyTyped

    private void txtfNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNombresKeyTyped
        MensajesValidaciones.negarNumeros(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfNombres,evt,45,this);
    }//GEN-LAST:event_txtfNombresKeyTyped

    private void txtfApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfApellidosKeyTyped
        MensajesValidaciones.negarNumeros(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfApellidos,evt,45,this);
    }//GEN-LAST:event_txtfApellidosKeyTyped

    private void btnNuevaObraSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaObraSocialActionPerformed
        this.txtfNuevaObraSocial.setEnabled(true);
        this.btnGuardarOS.setEnabled(true);
        this.btnCancelarOS.setEnabled(true);
        this.btnNuevaObraSocial.setEnabled(false);
        this.cmbObraSocial.setEnabled(false);
    }//GEN-LAST:event_btnNuevaObraSocialActionPerformed

    private void txtfNumeroAfiliadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNumeroAfiliadoKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfNumeroAfiliado, evt, 45, this);
        MensajesValidaciones.validarNumeroAfiliado(evt, this);
    }//GEN-LAST:event_txtfNumeroAfiliadoKeyTyped

    private void btnGuardarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarOSActionPerformed
        if (this.txtfNuevaObraSocial.getText().isEmpty()) {
            MensajesValidaciones.mostrarError(this, "Ingrese un nombre de obra social válido...");
            return;
        }
        String nuevaObra = this.txtfNuevaObraSocial.getText();
        if (daoObraSocial.registrarObraSocial(new ObraSocial(0, nuevaObra))) {
            MensajesValidaciones.mostrarInformacion(this, "Registro Exitoso.");
            llenarObrasSociales();
        } else {
            MensajesValidaciones.mostrarError(this, "Registro Fallido.");
        }
        
        this.txtfNuevaObraSocial.setEnabled(false);
        this.btnGuardarOS.setEnabled(false);
        this.btnNuevaObraSocial.setEnabled(true);
        this.cmbObraSocial.setEnabled(true);
        this.cmbObraSocial.setSelectedItem(nuevaObra);
        this.txtfNuevaObraSocial.setText("");
    }//GEN-LAST:event_btnGuardarOSActionPerformed

    private void txtfNuevaObraSocialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNuevaObraSocialKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfNuevaObraSocial, evt, 80, this);
    }//GEN-LAST:event_txtfNuevaObraSocialKeyTyped

    private void btnCancelarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarOSActionPerformed
        this.txtfNuevaObraSocial.setText("");
        this.txtfNuevaObraSocial.setEnabled(false);
        this.btnGuardarOS.setEnabled(false);
        this.btnCancelarOS.setEnabled(false);
        this.btnNuevaObraSocial.setEnabled(true);
        this.cmbObraSocial.setEnabled(true);
    }//GEN-LAST:event_btnCancelarOSActionPerformed

private void cmbObraSocialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbObraSocialItemStateChanged
    if(cmbObraSocial.getSelectedIndex() == 0)
    {
        txtfNumeroAfiliado.setText("");
        txtfNumeroAfiliado.setEnabled(false);
    }
    else
    {
        txtfNumeroAfiliado.setEnabled(true);
    }
}//GEN-LAST:event_cmbObraSocialItemStateChanged

    private void txtfMenopausiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMenopausiaKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfMenopausiaKeyTyped

    private void txtfTelarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTelarcaKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfTelarca, evt, 70, this);
    }//GEN-LAST:event_txtfTelarcaKeyTyped

    private void txtfMenarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMenarcaKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfMenarcaKeyTyped

    private void txtfAbortosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfAbortosKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfAbortosKeyTyped

    private void txtfCesareasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCesareasKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfCesareasKeyTyped

    private void txtfPartosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPartosKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfPartosKeyTyped

    private void txtfGestacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfGestacionesKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfGestacionesKeyTyped

    private void txtfVivosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfVivosKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfVivosKeyTyped

    private void txtfMuertosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMuertosKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfMuertosKeyTyped

    private void txtfDuracionMenstrualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDuracionMenstrualKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfDuracionMenstrualKeyTyped

    private void txtfPeriodoMenstrualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPeriodoMenstrualKeyTyped
        MensajesValidaciones.negarLetras(evt, this);
    }//GEN-LAST:event_txtfPeriodoMenstrualKeyTyped

    private void txtfAnticonceptivosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfAnticonceptivosKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfAnticonceptivos, evt, 70, this);
    }//GEN-LAST:event_txtfAnticonceptivosKeyTyped

    private void txtfTiroidesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTiroidesKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfTiroides, evt, 45, this);
    }//GEN-LAST:event_txtfTiroidesKeyTyped

    private void txtaOncologicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaOncologicosKeyPressed
        this.controlarFoco(evt);
    }//GEN-LAST:event_txtaOncologicosKeyPressed

    private void chkTiroidesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkTiroidesItemStateChanged
       if (!btnGuardar.isEnabled()) {
            chkTiroides.setSelected(p.getAntecFam().isTiroides());
        } else {
            if (!this.chkTiroides.isSelected()) {
                this.txtfTiroides.setEditable(false);
                this.txtfTiroides.setFocusable(false);
                this.txtfTiroides.setEnabled(false);
                this.tiroidesAux = this.txtfTiroides.getText();
                this.txtfTiroides.setText("");
            } else {
                this.txtfTiroides.setEditable(true);
                this.txtfTiroides.setFocusable(true);
                this.txtfTiroides.setEnabled(true);
                if (!this.tiroidesAux.isEmpty()){
                    this.txtfTiroides.setText(this.tiroidesAux);
                    this.txtfTiroides.selectAll();
                }
                this.txtfTiroides.grabFocus();
            }
        }
    }//GEN-LAST:event_chkTiroidesItemStateChanged

    private void chkOncologicosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkOncologicosItemStateChanged
        if (!btnGuardar.isEnabled()) {
            chkOncologicos.setSelected(p.getAntecFam().isOncologicos());
        } else {
            if (!this.chkOncologicos.isSelected()) {
                this.txtaOncologicos.setEditable(false);
                this.txtaOncologicos.setFocusable(false);
                this.txtaOncologicos.setEnabled(false);
                this.oncologógicosAux = this.txtaOncologicos.getText();
                this.txtaOncologicos.setText("");
            } else {
                this.txtaOncologicos.setEditable(true);
                this.txtaOncologicos.setFocusable(true);
                this.txtaOncologicos.setEnabled(true);
                if (!this.oncologógicosAux.isEmpty()){
                    this.txtaOncologicos.setText(this.oncologógicosAux);
                    this.txtaOncologicos.selectAll();
                }
                this.txtaOncologicos.grabFocus();
            }
        }
    }//GEN-LAST:event_chkOncologicosItemStateChanged

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        this.setearLabels(btnGuardar, true);
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        this.setearLabels(btnGuardar, false);
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    af = new AntecedentesFamiliares();  
    agen = new AntecedentesGenerales();
    aginec = new AntecedentesGinecologicos();
    String error = comprobarDatosObligatorios();
    if(!error.isEmpty())
    {
        MensajesValidaciones.mostrarError(this,"Debe completar los siguientes datos obligatorios: \n"+error);
        return;
    }   
    long dniPaciente = Long.parseLong(this.txtfDni.getText());
    
    ObraSocial osAux = new ObraSocial();
    for (int i = 0; i < obras.size(); i++) {
        if(obras.get(i).getNombre().compareTo(cmbObraSocial.getSelectedItem().toString()) == 0)
            osAux = obras.get(i);
    }
    
    Paciente match = daoPaciente.verificarNroAfiliado(osAux.getId(), txtfNumeroAfiliado.getText());
    
    if(procedencia == 0) //Principal, nuevo
    {
        
        if(daoPaciente.verificarPaciente(dniPaciente)){
            MensajesValidaciones.mostrarError(this, "El paciente ya se encuentra registrado. Corrija el DNI o búsquelo en la ventana principal.");
            this.txtfDni.setText("");
            this.txtfDni.grabFocus();
            return;
        }
                    
        if(cmbObraSocial.getSelectedIndex() != 0 && match != null){
            MensajesValidaciones.mostrarError(this, "El paciente '"+match.getApellido().toUpperCase()+", "+match.getNombre()+"', DNI N°"+match.getDni()
                    + " ya se encuentra registrado con misma obra social y N° de afiliado.");
            this.txtfNumeroAfiliado.setText("");
            this.txtfNumeroAfiliado.grabFocus();
            return;
        }
        
        generarAntecedentes();
    
        if(!generarPaciente())
            return;
    
        if(daoPaciente.registrarPaciente(p))
        {
            MensajesValidaciones.mostrarInformacion(this,"Registro Exitoso.");
            hc = new HistoriaClinica(padre, p, 1);
            hc.llenarCampos(p,1);
            padreP.actualizarListaPacientes(null);
            this.dispose();
            hc.setVisible(true);
        }
        else{
            MensajesValidaciones.mostrarError(this,"Registro Fallido.");
        }
    }
    else if(procedencia == 1 || procedencia == 2)//Historia clinica(2), Principal-Modificar(1) 
    {
        if(dniPaciente != dniOriginal && daoPaciente.verificarPaciente(dniPaciente)){
            MensajesValidaciones.mostrarError(this,"El dni ingresado para la modificación ya se encuentra en la base de datos a nombre de otro paciente.\n"
                                             + " Corrija el DNI.");
            this.txtfDni.setText("");
            return;
        }
        
        if(cmbObraSocial.getSelectedIndex() != 0 
                && (idObraSocialOriginal != osAux.getId() || !nroAfiliadoOriginal.equals(txtfNumeroAfiliado.getText())) 
                && match != null
                && match.getDni() != dniOriginal){
            MensajesValidaciones.mostrarError(this, "El paciente '"+match.getApellido().toUpperCase()+", "+match.getNombre()+"', DNI N°"+match.getDni()
                    + " ya se encuentra registrado con misma obra social y N° de afiliado.");
            this.txtfNumeroAfiliado.setText("");
            this.txtfNumeroAfiliado.grabFocus();
            return;
        }
                        
        generarAntecedentes();
    
    
        if(error.isEmpty())
        {
            if(!generarPaciente())
                return;
        }
    
        else
        {
            MensajesValidaciones.mostrarError(this,"Debe completar los siguientes campos obligatorios: \n"+error);
            return;
        }   
    
        if(daoPaciente.actualizarPaciente(p,dniOriginal))
        {
            MensajesValidaciones.mostrarInformacion(this,"Actualización Exitosa.");
            
                if(this.procedencia == 2)
                {
                    hc.setPaciente(p);
                    hc.llenarCampos(p,1);
                    this.dispose();
                    hc.setVisible(true);
                }
                
                else
                {
                    LinkedList<Paciente> pacienteList = new LinkedList<Paciente>();
                    pacienteList.add(daoPaciente.getPacienteBasico(p.getDni()));
                    padreP.actualizarListaPacientes(pacienteList);
                }
        }
        else{
            MensajesValidaciones.mostrarError(this,"Actualización Fallida.");
        }
    }
    if(procedencia == 1)
    {
    cambiarEstadoCajas(false);
    this.btnModificar.setEnabled(true);
    this.btnGuardar.setEnabled(false);
    }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseEntered
        this.setearLabels(btnVolver, true);
    }//GEN-LAST:event_btnVolverMouseEntered

    private void btnVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseExited
        this.setearLabels(btnVolver, false);
    }//GEN-LAST:event_btnVolverMouseExited

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.salir();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnModificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseEntered
        this.setearLabels(btnModificar, true);
    }//GEN-LAST:event_btnModificarMouseEntered

    private void btnModificarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseExited
        this.setearLabels(btnModificar, false);
    }//GEN-LAST:event_btnModificarMouseExited

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.cambiarEstadoCajas(true);
        this.btnModificar.setEnabled(false);
        this.btnGuardar.setEnabled(true);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.salir();
    }//GEN-LAST:event_formWindowClosing

    private void txtaPersonalesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaPersonalesKeyPressed
        this.controlarFoco(evt);
    }//GEN-LAST:event_txtaPersonalesKeyPressed

    private void txtaQuirurgicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaQuirurgicosKeyPressed
        this.controlarFoco(evt);
    }//GEN-LAST:event_txtaQuirurgicosKeyPressed

    private void txtaToxicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaToxicosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB && !evt.isShiftDown()) {
            evt.consume();
            this.tabbedPaneAntecedentes.setSelectedComponent(this.pnlGinecologicos);
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB
                && evt.isShiftDown()) {
            evt.consume();
            KeyboardFocusManager.getCurrentKeyboardFocusManager().focusPreviousComponent();
        }
    }//GEN-LAST:event_txtaToxicosKeyPressed

    private void txtaGinecObservKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaGinecObservKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB && !evt.isShiftDown()) {
            evt.consume();
            this.tabbedPaneAntecedentes.setSelectedComponent(this.pnlFamiliares);
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB
                && evt.isShiftDown()) {
            evt.consume();
            KeyboardFocusManager.getCurrentKeyboardFocusManager().focusPreviousComponent();
        }
    }//GEN-LAST:event_txtaGinecObservKeyPressed

    private void txtaFamObservacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaFamObservacionesKeyPressed
        this.controlarFoco(evt);
    }//GEN-LAST:event_txtaFamObservacionesKeyPressed

    private void chkDiabetesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDiabetesItemStateChanged
        if (!btnGuardar.isEnabled())
            chkDiabetes.setSelected(p.getAntecFam().isDbt());
    }//GEN-LAST:event_chkDiabetesItemStateChanged

    private void chkHipertensionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkHipertensionItemStateChanged
        if (!btnGuardar.isEnabled())
            chkHipertension.setSelected(p.getAntecFam().isHta());
    }//GEN-LAST:event_chkHipertensionItemStateChanged

    private void chkDispareuniaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDispareuniaItemStateChanged
        if (!btnGuardar.isEnabled())
            chkDispareunia.setSelected(p.getAntecGinec().isDispareunia());
    }//GEN-LAST:event_chkDispareuniaItemStateChanged

    private void chkDismenorreaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkDismenorreaItemStateChanged
        if (!btnGuardar.isEnabled()) 
            chkDismenorrea.setSelected(p.getAntecGinec().isDismenorrea());
    }//GEN-LAST:event_chkDismenorreaItemStateChanged

    private void chkSdpmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkSdpmItemStateChanged
        if (!btnGuardar.isEnabled()) 
            chkSdpm.setSelected(p.getAntecGinec().isSdpm());
    }//GEN-LAST:event_chkSdpmItemStateChanged

    private void rbtnFactorPosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnFactorPosItemStateChanged
        if (!btnGuardar.isEnabled()) 
            this.btngrpSangre.setSelected(this.rbtnFactorPos.getModel(), true);
    }//GEN-LAST:event_rbtnFactorPosItemStateChanged

    private void rbtnFactorNegItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnFactorNegItemStateChanged
        if (!btnGuardar.isEnabled())
            this.btngrpSangre.setSelected(this.rbtnFactorNeg.getModel(), true);
    }//GEN-LAST:event_rbtnFactorNegItemStateChanged

    private void rbtnFactorPosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rbtnFactorPosKeyPressed
        this.controlarFoco(evt);
    }//GEN-LAST:event_rbtnFactorPosKeyPressed

    
    private void setearLabels(JButton jbtn, boolean entrada){
        if(jbtn.isEnabled())
            if (entrada) {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 15));
            }
            else {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 14));
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarOS;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarOS;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevaObraSocial;
    private javax.swing.JButton btnVolver;
    private javax.swing.ButtonGroup btngrpSangre;
    private javax.swing.JCheckBox chkDiabetes;
    private javax.swing.JCheckBox chkDismenorrea;
    private javax.swing.JCheckBox chkDispareunia;
    private javax.swing.JCheckBox chkHipertension;
    private javax.swing.JCheckBox chkOncologicos;
    private javax.swing.JCheckBox chkSdpm;
    private javax.swing.JCheckBox chkTiroides;
    private javax.swing.JComboBox cmbGrupoS;
    private javax.swing.JComboBox cmbObraSocial;
    private javax.swing.JFormattedTextField ftxtfFechaNacimiento;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblstaticAnticoncep;
    private javax.swing.JLabel lblstaticApellidos;
    private javax.swing.JLabel lblstaticCiclosMens;
    private javax.swing.JLabel lblstaticFactor;
    private javax.swing.JLabel lblstaticFechaNacimiento;
    private javax.swing.JLabel lblstaticGestaciones;
    private javax.swing.JLabel lblstaticGinecObserv;
    private javax.swing.JLabel lblstaticGrupoS;
    private javax.swing.JLabel lblstaticMenarca;
    private javax.swing.JLabel lblstaticMenopausia1;
    private javax.swing.JLabel lblstaticNombres;
    private javax.swing.JLabel lblstaticNumAfiliado;
    private javax.swing.JLabel lblstaticPartos;
    private javax.swing.JLabel lblstaticSeparador6;
    private javax.swing.JLabel lblstaticSeparador7;
    private javax.swing.JLabel lblstaticSeparador8;
    private javax.swing.JLabel lblstaticSeparador9;
    private javax.swing.JLabel lblstaticTelarca;
    private javax.swing.JLabel lblstaticTelefono;
    private javax.swing.JLabel lblstaticTelefono1;
    private javax.swing.JPanel pnlAntecedentes;
    private javax.swing.JPanel pnlDatosPersonales;
    private javax.swing.JPanel pnlFamiliares;
    private javax.swing.JPanel pnlGenerales;
    private javax.swing.JPanel pnlGinecologicos;
    private javax.swing.JPanel pnlGinecologicos1;
    private javax.swing.JPanel pnlObraSocial;
    private javax.swing.JPanel pnlObservacionesFam;
    private javax.swing.JPanel pnlObservacionesGinec;
    private javax.swing.JPanel pnlPersonales;
    private javax.swing.JPanel pnlQuirurgicos;
    private javax.swing.JPanel pnlToxicos;
    private javax.swing.JRadioButton rbtnFactorNeg;
    private javax.swing.JRadioButton rbtnFactorPos;
    private javax.swing.JTabbedPane tabbedPaneAntecedentes;
    private javax.swing.JTextArea txtaFamObservaciones;
    private javax.swing.JTextArea txtaGinecObserv;
    private javax.swing.JTextArea txtaOncologicos;
    private javax.swing.JTextArea txtaPersonales;
    private javax.swing.JTextArea txtaQuirurgicos;
    private javax.swing.JTextArea txtaToxicos;
    private javax.swing.JTextField txtfAbortos;
    private javax.swing.JTextField txtfAnticonceptivos;
    private javax.swing.JTextField txtfApellidos;
    private javax.swing.JTextField txtfCesareas;
    private javax.swing.JTextField txtfDni;
    private javax.swing.JTextField txtfDuracionMenstrual;
    private javax.swing.JTextField txtfGestaciones;
    private javax.swing.JTextField txtfMenarca;
    private javax.swing.JTextField txtfMenopausia;
    private javax.swing.JTextField txtfMuertos;
    private javax.swing.JTextField txtfNombres;
    private javax.swing.JTextField txtfNuevaObraSocial;
    private javax.swing.JTextField txtfNumeroAfiliado;
    private javax.swing.JTextField txtfPartos;
    private javax.swing.JTextField txtfPeriodoMenstrual;
    private javax.swing.JTextField txtfTelarca;
    private javax.swing.JTextField txtfTelefono;
    private javax.swing.JTextField txtfTiroides;
    private javax.swing.JTextField txtfVivos;
    // End of variables declaration//GEN-END:variables
 
    /**
     * Se genera el objeto paciente que se desea guardar en la base de datos!
     */
    private boolean generarPaciente() {
        String error;
        p = new Paciente();
        
        p.setNombre(this.txtfNombres.getText());
        p.setApellido(this.txtfApellidos.getText());
        p.setTelefono(this.txtfTelefono.getText());
        p.setDni(Long.parseLong(this.txtfDni.getText()));
        
        try {
            String dia = this.ftxtfFechaNacimiento.getText(0,2);
            String mes = this.ftxtfFechaNacimiento.getText(3,2);
            String año = this.ftxtfFechaNacimiento.getText(6,4);
            
            error = MensajesValidaciones.corroborarFecha(dia,mes,año);
           
            if(!error.isEmpty())
            {
                MensajesValidaciones.mostrarError(this, "Los siguientes valores de la fecha no son válidos o están fuera de rango: \n" + error);
                return false;
            }
        } catch (BadLocationException ex) {
            Logger.getLogger(ABMPacienteCompleto.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setFechaNacimiento(this.ftxtfFechaNacimiento.getText());
        
        p.setGrupoSanguineo((String)this.cmbGrupoS.getSelectedItem());
        
        
        if(!this.rbtnFactorNeg.isSelected() && !this.rbtnFactorPos.isSelected())
        {
            MensajesValidaciones.mostrarError(this,"No se ha seleccionado ningún factor.");
            return false;
        }
        else
        {
            if(btngrpSangre.isSelected(this.rbtnFactorPos.getModel()))
                p.setFactor(true);
            else
                p.setFactor(false);
        }
        
        for (int i = 0; i < obras.size(); i++) {
            if(obras.get(i).getNombre().compareTo((String)cmbObraSocial.getSelectedItem()) == 0)
               p.setObraSocial(obras.get(i));
        }
        p.setNumeroAfiliado(this.txtfNumeroAfiliado.getText());
        p.setAntecGen(agen);
        p.setAntecGinec(aginec);
        p.setAntecFam(af);
        return true;
    }

    /**
     * metodo para la generacion de los antecedentes del paciente!
     */
    private void generarAntecedentes() {
        //Antecedentes generales
        agen = new AntecedentesGenerales();
        
            agen.setAntecedentesPersonales(this.txtaPersonales.getText());
            agen.setAntecedentesQuirurgicos(this.txtaQuirurgicos.getText());
            agen.setAntecedentesToxicos(this.txtaToxicos.getText());
      
       //Antecedentes Ginecologicos
       aginec = new AntecedentesGinecologicos();
            
            if(!this.txtfAbortos.getText().isEmpty())
                aginec.setAbortos(Integer.parseInt(this.txtfAbortos.getText()));
            
            aginec.setAnticonceptivos(this.txtfAnticonceptivos.getText());
            
            if(!this.txtfCesareas.getText().isEmpty())
                aginec.setCesareas(Integer.parseInt(this.txtfCesareas.getText()));
            
            aginec.setDismenorrea(this.chkDismenorrea.isSelected());
            aginec.setDispareunia(this.chkDispareunia.isSelected());
            
            if(!this.txtfDuracionMenstrual.getText().isEmpty())
                aginec.setDuracionMenstrual(Integer.parseInt(this.txtfDuracionMenstrual.getText()));
            
            if(!this.txtfGestaciones.getText().isEmpty())
                aginec.setGestaciones(Integer.parseInt(this.txtfGestaciones.getText()));
            
            if(!this.txtfMenarca.getText().isEmpty())
                aginec.setMenarca(Integer.parseInt(this.txtfMenarca.getText()));
            
            if(!this.txtfMenopausia.getText().isEmpty())
                aginec.setMenopausia(Integer.parseInt(this.txtfMenopausia.getText()));
            
            if(!this.txtfMuertos.getText().isEmpty())
                aginec.setMuertos(Integer.parseInt(this.txtfMuertos.getText()));
            
            aginec.setObservaciones(this.txtaGinecObserv.getText());
            
            if(!this.txtfPartos.getText().isEmpty())
                aginec.setPartos(Integer.parseInt(this.txtfPartos.getText()));
             
            if(!this.txtfPeriodoMenstrual.getText().isEmpty())
                aginec.setPeriodoMenstrual(Integer.parseInt(this.txtfPeriodoMenstrual.getText()));
            
            aginec.setSdpm(this.chkSdpm.isSelected());
            aginec.setTelarca(this.txtfTelarca.getText());
            
            if(!this.txtfVivos.getText().isEmpty())
                aginec.setVivos(Integer.parseInt(this.txtfVivos.getText()));
       //Antecedentes Familiares     
       af = new AntecedentesFamiliares();
       
            af.setDbt(this.chkDiabetes.isSelected());
            af.setDescripcionOncologicos(this.txtaOncologicos.getText());
            af.setDescripcionTiroides(this.txtfTiroides.getText());
            af.setHta(this.chkHipertension.isSelected());
            af.setObservaciones(this.txtaFamObservaciones.getText());
            af.setOncologicos(this.chkOncologicos.isSelected());
            af.setTiroides(this.chkTiroides.isSelected());
    }
    
    /**
     *comprueba que las cajas obligatorias esten completas
     * Obligatorias: nombres,apellidos,telefono,dni,fechaNacimiento,numeroAfiliado
     */
    private String comprobarDatosObligatorios() {
        String incompletas="";
        
        if(this.txtfNombres.getText().isEmpty())
            incompletas+="Nombres \n";
        
        if(this.txtfApellidos.getText().isEmpty())
            incompletas+="Apellidos \n";
        
        if(this.txtfTelefono.getText().isEmpty())
            incompletas+="Teléfono \n";
        
        if(this.txtfDni.getText().isEmpty())
            incompletas+="Nro. de Documento \n";
        
        if(this.ftxtfFechaNacimiento.getText().compareTo("  /  /    ") == 0)
            incompletas+="Fecha de Nacimiento \n";
        
        if(this.txtfNumeroAfiliado.getText().isEmpty() && this.txtfNumeroAfiliado.isEnabled())
            incompletas+="Nro. de Afiliado \n";
        
        if(this.rbtnFactorNeg.isSelected() == false && this.rbtnFactorPos.isSelected() == false)
            incompletas +="Factor \n";
        
        if(this.chkTiroides.isSelected() && this.txtfTiroides.getText().isEmpty())
            incompletas+="Descripción de Tiroides \n";
        
        if(this.chkOncologicos.isSelected() && this.txtaOncologicos.getText().isEmpty())
            incompletas+="Descripción de Oncológicos \n";
        
        return incompletas;
    }
    
        
    /**
     * Metodo generico utilizado para llenar todos los datos.
     */
    private void llenarCajas(Paciente p) {
        this.txtfNombres.setText(p.getNombre());
        this.txtfApellidos.setText(p.getApellido());
        this.txtfTelefono.setText(p.getTelefono());
        this.txtfDni.setText(p.getDni()+"");
        this.ftxtfFechaNacimiento.setText(p.getFechaNacimiento());
        this.cmbObraSocial.setSelectedItem(p.getObraSocial().getNombre());
        this.txtfNumeroAfiliado.setText(p.getNumeroAfiliado());
        
        if(p.getFactor())
            this.btngrpSangre.setSelected(this.rbtnFactorPos.getModel(), true);
        else
            this.btngrpSangre.setSelected(this.rbtnFactorNeg.getModel(), true);
        
        this.txtaPersonales.setText(p.getAntecGen().getAntecedentesPersonales());
        this.txtaToxicos.setText(p.getAntecGen().getAntecedentesToxicos());
        this.txtaQuirurgicos.setText(p.getAntecGen().getAntecedentesQuirurgicos());
        this.txtaFamObservaciones.setText(p.getAntecFam().getObservaciones());
        this.txtaGinecObserv.setText(p.getAntecGinec().getObservaciones());
        this.txtfAbortos.setText(p.getAntecGinec().getAbortos()+"");
        this.txtfAnticonceptivos.setText(p.getAntecGinec().getAnticonceptivos());
        this.txtaOncologicos.setText(p.getAntecFam().getDescripcionOncologicos());
        this.txtfCesareas.setText(p.getAntecGinec().getCesareas()+"");
        this.txtfDuracionMenstrual.setText(p.getAntecGinec().getDuracionMenstrual()+"");
        this.txtfPeriodoMenstrual.setText(p.getAntecGinec().getPeriodoMenstrual()+"");
        this.txtfGestaciones.setText(p.getAntecGinec().getGestaciones()+"");
        if (p.getAntecGinec().getMenarca() == 0)
            this.txtfMenarca.setText("");
        else
            this.txtfMenarca.setText(p.getAntecGinec().getMenarca()+"");
        if (p.getAntecGinec().getMenopausia() == 0)
            this.txtfMenopausia.setText("");
        else
            this.txtfMenopausia.setText(p.getAntecGinec().getMenopausia()+"");
        this.txtfMuertos.setText(p.getAntecGinec().getMuertos()+"");
        this.txtfPartos.setText(p.getAntecGinec().getPartos()+""); 
        this.txtfTelarca.setText(p.getAntecGinec().getTelarca());
        this.txtfTiroides.setText(p.getAntecFam().getDescripcionTiroides());
        this.txtfVivos.setText(p.getAntecGinec().getVivos()+"");
        this.cmbGrupoS.setSelectedItem(p.getGrupoSanguineo());
        this.chkDiabetes.setSelected(p.getAntecFam().isDbt());
        this.chkDismenorrea.setSelected(p.getAntecGinec().isDismenorrea());
        this.chkDispareunia.setSelected(p.getAntecGinec().isDispareunia());
        this.chkHipertension.setSelected(p.getAntecFam().isHta());
        this.chkOncologicos.setSelected(p.getAntecFam().isOncologicos());
        this.chkSdpm.setSelected(p.getAntecGinec().isSdpm());
        this.chkTiroides.setSelected(p.getAntecFam().isTiroides());
        if (!p.getAntecFam().isTiroides()) 
            this.txtfTiroides.setEnabled(false);
        if (!p.getAntecFam().isOncologicos())
            this.txtaOncologicos.setEnabled(false);
    }
    
    /**
     * Metodo utilizado para llenar las obras sociales
     */
    private void llenarObrasSociales() {
        obras = new LinkedList<>();
        cmbObraSocial.removeAllItems();
        obras.add(new ObraSocial(0, "Sin Obra Social"));
        obras.addAll(daoObraSocial.getAllObrasSociales());
        for(int i = 0; i<obras.size(); i++)
            cmbObraSocial.addItem(obras.get(i).getNombre());
        cmbObraSocial.setSelectedIndex(0);
    }

    /**
     * Metodo utilizado para limpiar las cajas
     */
    private void limpiar() {
        
        this.txtfNombres.setText("");
        this.txtfApellidos.setText("");
        this.txtfTelefono.setText("");
        this.txtfDni.setText("");
        this.ftxtfFechaNacimiento.setText("");
        this.cmbGrupoS.setSelectedIndex(0);
        this.rbtnFactorNeg.setSelected(false);
        this.rbtnFactorPos.setSelected(false);
        this.cmbObraSocial.setSelectedIndex(0);
        this.txtfNumeroAfiliado.setText("");
        this.txtaPersonales.setText("");
        this.txtaToxicos.setText("");
        this.txtaQuirurgicos.setText("");
        this.txtaFamObservaciones.setText("");
        this.txtaGinecObserv.setText("");
        this.txtfAbortos.setText("");
        this.txtfAnticonceptivos.setText("");
        this.txtaOncologicos.setText("");
        this.txtfCesareas.setText("");
        this.txtfDuracionMenstrual.setText("");
        this.txtfPeriodoMenstrual.setText("");
        this.txtfGestaciones.setText("");
        this.txtfMenarca.setText("");
        this.txtfMenopausia.setText("");
        this.txtfPartos.setText("");
        this.txtfTelarca.setText("");
        this.txtfTiroides.setText("");
        this.txtfVivos.setText("");
        this.txtfMuertos.setText("");
        this.rbtnFactorNeg.setSelected(false);
        this.rbtnFactorPos.setSelected(false);
        this.chkDiabetes.setSelected(false);
        this.chkDismenorrea.setSelected(false);
        this.chkDispareunia.setSelected(false);
        this.chkHipertension.setSelected(false);
        this.chkOncologicos.setSelected(false);
        this.chkSdpm.setSelected(false);
        this.chkTiroides.setSelected(false);
        this.txtfTiroides.setEditable(false);
        this.txtaOncologicos.setEditable(false);
    }
    
    /**
     * Metodo utilizado para cambiar el estado de las cajas (Habilitadas, Deshabilitadas)
     * @param b true (Habilitadas), false ()Deshabilitadas
     */
    private void cambiarEstadoCajas(boolean b) {
        this.txtfNombres.setEditable(b);
        this.txtfApellidos.setEditable(b);
        this.txtfTelefono.setEditable(b);
        this.txtfDni.setEditable(b);
        this.ftxtfFechaNacimiento.setEditable(b);
        this.txtfNumeroAfiliado.setEditable(b);
        this.txtaPersonales.setEditable(b);
        this.txtaToxicos.setEditable(b);
        this.txtaQuirurgicos.setEditable(b);
        this.txtaFamObservaciones.setEditable(b);
        this.txtaGinecObserv.setEditable(b);
        this.txtfAbortos.setEditable(b);
        this.txtfAnticonceptivos.setEditable(b);
        this.txtaOncologicos.setEditable(b);
        this.txtfCesareas.setEditable(b);
        this.txtfDuracionMenstrual.setEditable(b);
        this.txtfPeriodoMenstrual.setEditable(b);
        this.txtfGestaciones.setEditable(b);
        this.txtfMenarca.setEditable(b);
        this.txtfMenopausia.setEditable(b);
        this.txtfPartos.setEditable(b);
        this.txtfTelarca.setEditable(b);
        this.txtfTiroides.setEditable(b);
        this.txtfVivos.setEditable(b);
        this.txtfMuertos.setEditable(b);
        this.txtfTiroides.setEditable(b);
        this.txtaOncologicos.setEditable(b);
        
        this.cmbGrupoS.setEditable(!b);
        this.cmbObraSocial.setEditable(!b);
        
        this.cmbObraSocial.setEnabled(b);
        this.cmbGrupoS.setEnabled(b);
        
        this.rbtnFactorNeg.setEnabled(b);
        this.rbtnFactorPos.setEnabled(b);
        
        this.txtfNombres.setFocusable(b);
        this.txtfApellidos.setFocusable(b);
        this.txtfTelefono.setFocusable(b);
        this.txtfDni.setFocusable(b);
        this.ftxtfFechaNacimiento.setFocusable(b);
        this.rbtnFactorNeg.setFocusable(b);
        this.rbtnFactorPos.setFocusable(b);
        this.txtfNumeroAfiliado.setFocusable(b);
        this.txtaPersonales.setFocusable(b);
        this.txtaToxicos.setFocusable(b);
        this.txtaQuirurgicos.setFocusable(b);
        this.txtaFamObservaciones.setFocusable(b);
        this.txtaGinecObserv.setFocusable(b);
        this.txtfAbortos.setFocusable(b);
        this.txtfAnticonceptivos.setFocusable(b);
        this.txtaOncologicos.setFocusable(b);
        this.txtfCesareas.setFocusable(b);
        this.txtfDuracionMenstrual.setFocusable(b);
        this.txtfPeriodoMenstrual.setFocusable(b);
        this.txtfGestaciones.setFocusable(b);
        this.txtfMenarca.setFocusable(b);
        this.txtfMenopausia.setFocusable(b);
        this.txtfPartos.setFocusable(b);
        this.txtfTelarca.setFocusable(b);
        this.txtfTiroides.setFocusable(b);
        this.txtfVivos.setFocusable(b);
        this.txtfMuertos.setFocusable(b);
        this.chkDiabetes.setFocusable(b);
        this.chkDismenorrea.setFocusable(b);
        this.chkDispareunia.setFocusable(b);
        this.chkHipertension.setFocusable(b);
        this.chkOncologicos.setFocusable(b);
        this.chkSdpm.setFocusable(b);
        this.chkTiroides.setFocusable(b);
        this.txtfTiroides.setFocusable(b);
        this.txtaOncologicos.setFocusable(b);
        
        this.btnNuevaObraSocial.setEnabled(b);
    }
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }
    
    /**
     * Método controlador del cierre de la ventana y validaciones oportunas
     */
    private void salir() {
        if(!btnGuardar.isEnabled()){
            this.dispose();
            if (this.getParent() != null)
                this.getParent().setVisible(true);
            if (hc != null)
                hc.cerrarHijo(this);
            else 
                padreP.cerrarHijo(this);
        }
        else
        {
            MensajesValidaciones.validarSalidaVentana(this);
        }
    }
    
    /**
     * Maneja el paso del foco con las taclas TAB y Shift TAB.
     * Éste método cobra importancia para los componentes JTextArea.
     * @param evt 
     */
    private void controlarFoco(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_TAB && !evt.isShiftDown()) {
            evt.consume();
            KeyboardFocusManager.getCurrentKeyboardFocusManager().focusNextComponent();
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB
                && evt.isShiftDown()) {
            evt.consume();
            KeyboardFocusManager.getCurrentKeyboardFocusManager().focusPreviousComponent();
        }
    }

    /**
     * Devuelve el número de dni del paciente en cuestión
     * @return el dni del paciente, -1 si es un nuevo paciente aún no guardado
     */
    public long getDniPaciente() {
        if (p != null)
            return p.getDni();
        return -1;
    }
}
