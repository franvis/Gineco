/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ClasesBase.modelo.Consulta;
import ClasesBase.GestorEstilos;
import ClasesBase.MultiLineCellRenderer;
import ClasesBase.modelo.Paciente;
import DAO.*;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

public class HistoriaClinica extends javax.swing.JFrame {

    private Principal antecesor;
    private DAOPaciente daoPaciente;
    private DAOConsulta daoConsulta;
    private LinkedList<Consulta> consultasDeTabla;
    private LinkedList<JFrame> ventanasAbiertas;
    private DAOAntecedentesFamiliares daoAntecFam;
    private DAOAntecedentesGinecologicos daoAntecGinec;
    private DAOAntecedentesGenerales daoAntecGen;
    private DefaultTableModel dtmConsultas;
    private AntecFamiliares antecedentesFamiliares;
    private AntecGenerales antecedentesGenerales;
    private AntecGinecologicos antecedentesGinecologicos;
    private Paciente paciente;
    private boolean AntecFamModificado;
    private boolean AntecGenModificado;
    private boolean AntecGinecModificado;
     
    /**
     * Creates new form HistoriaClinica
     */
    public HistoriaClinica(Component parent, Paciente p, int procedencia) {
        initComponents();
        AntecFamModificado = false;
        AntecGenModificado = false;
        AntecGinecModificado = false;
        daoPaciente = new DAOPaciente();
        daoConsulta = new DAOConsulta();
        daoAntecFam = new DAOAntecedentesFamiliares();
        daoAntecGen = new DAOAntecedentesGenerales();
        daoAntecGinec = new DAOAntecedentesGinecologicos();
        ventanasAbiertas = new LinkedList<>();
        this.paciente = p;
        this.btnModificarPaciente.grabFocus();
        this.btnVerConsulta.setEnabled(false);
        llenarCampos(paciente,procedencia);
        tblConsultas.getColumn("Fecha").setMaxWidth(100);
        tblConsultas.getColumn("Fecha").setResizable(false);
        tblConsultas.getColumn("Motivo").setResizable(false);
        tblConsultas.getColumn("Diagnóstico").setResizable(false);
        tblConsultas.getColumn("Tipo de Consulta").setResizable(false);
        tblConsultas.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 14));
        tblConsultas.setDefaultRenderer(String.class, new MultiLineCellRenderer());
        tblConsultas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        llenarTabla(paciente.getDni());
        GestorEstilos.pintar(this);
        pnlApellidoNombre.setBackground(GestorEstilos.getColorSecundario(GestorEstilos.colorActual));
        antecesor = (Principal) parent;
        this.setExtendedState(antecesor.getExtendedState());
        this.setLocationRelativeTo(antecesor);
        //eventos de la página
        KeyStroke strokeEsc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        this.getRootPane().registerKeyboardAction(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    antecesor.setVisible(true);
                    dispose();
                }
            }, strokeEsc, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNuevaConsulta = new javax.swing.JPanel();
        btnNuevaCompleta = new javax.swing.JButton();
        btnNuevaGinecologica = new javax.swing.JButton();
        btnNuevaObstetrica = new javax.swing.JButton();
        pnlBotones = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        pnlConsultas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultas = new javax.swing.JTable();
        btnVerConsulta = new javax.swing.JButton();
        pnlDatosPersonales = new javax.swing.JPanel();
        lblstaticDni = new javax.swing.JLabel();
        lblstaticNumAfiliado = new javax.swing.JLabel();
        lblstaticObraSocial = new javax.swing.JLabel();
        lblstaticFechaNacimiento = new javax.swing.JLabel();
        lblDni = new javax.swing.JLabel();
        lblFechaNacimiento = new javax.swing.JLabel();
        lblNumeroAfiliado = new javax.swing.JLabel();
        lblObraSocial = new javax.swing.JLabel();
        pnlAntecedentes = new javax.swing.JPanel();
        btnGenerales = new javax.swing.JButton();
        btnGinecologicos = new javax.swing.JButton();
        btnFamiliares = new javax.swing.JButton();
        lblstaticSangre = new javax.swing.JLabel();
        lblSangre = new javax.swing.JLabel();
        btnModificarPaciente = new javax.swing.JButton();
        lblTelefono = new javax.swing.JLabel();
        lblstaticTelefono = new javax.swing.JLabel();
        pnlApellidoNombre = new javax.swing.JPanel();
        lblNombrePaciente = new javax.swing.JLabel();
        lblstaticNombre = new javax.swing.JLabel();
        lblstaticEdad = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Historia Clínica");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(723, 530));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlNuevaConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Nueva Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlNuevaConsulta.setOpaque(false);

        btnNuevaCompleta.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNuevaCompleta.setForeground(new java.awt.Color(0, 51, 102));
        btnNuevaCompleta.setText("Completa");
        btnNuevaCompleta.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnNuevaCompleta.setContentAreaFilled(false);
        btnNuevaCompleta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaCompleta.setNextFocusableComponent(btnNuevaGinecologica);
        btnNuevaCompleta.setOpaque(true);
        btnNuevaCompleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCompletaActionPerformed(evt);
            }
        });

        btnNuevaGinecologica.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNuevaGinecologica.setForeground(new java.awt.Color(0, 51, 102));
        btnNuevaGinecologica.setText("Ginecológica");
        btnNuevaGinecologica.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnNuevaGinecologica.setContentAreaFilled(false);
        btnNuevaGinecologica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaGinecologica.setNextFocusableComponent(btnNuevaObstetrica);
        btnNuevaGinecologica.setOpaque(true);
        btnNuevaGinecologica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaGinecologicaActionPerformed(evt);
            }
        });

        btnNuevaObstetrica.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNuevaObstetrica.setForeground(new java.awt.Color(0, 51, 102));
        btnNuevaObstetrica.setText("Obstétrica");
        btnNuevaObstetrica.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnNuevaObstetrica.setContentAreaFilled(false);
        btnNuevaObstetrica.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaObstetrica.setNextFocusableComponent(btnVolver);
        btnNuevaObstetrica.setOpaque(true);
        btnNuevaObstetrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaObstetricaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlNuevaConsultaLayout = new javax.swing.GroupLayout(pnlNuevaConsulta);
        pnlNuevaConsulta.setLayout(pnlNuevaConsultaLayout);
        pnlNuevaConsultaLayout.setHorizontalGroup(
            pnlNuevaConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevaCompleta, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevaGinecologica, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNuevaObstetrica, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlNuevaConsultaLayout.setVerticalGroup(
            pnlNuevaConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaConsultaLayout.createSequentialGroup()
                .addGroup(pnlNuevaConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevaGinecologica, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnNuevaObstetrica, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnNuevaCompleta, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnVolver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 51, 102));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/home_enabled.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnVolver.setContentAreaFilled(false);
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVolver.setOpaque(true);
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMouseExited(evt);
            }
        });
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnVolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        pnlConsultas.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Consultas Anteriores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N

        tblConsultas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fecha", "Motivo", "Diagnóstico", "Tipo de Consulta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConsultas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblConsultas);
        tblConsultas.getColumnModel().getColumn(0).setMinWidth(80);
        tblConsultas.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblConsultas.getColumnModel().getColumn(0).setMaxWidth(80);
        tblConsultas.getColumnModel().getColumn(3).setMinWidth(140);
        tblConsultas.getColumnModel().getColumn(3).setPreferredWidth(140);
        tblConsultas.getColumnModel().getColumn(3).setMaxWidth(140);

        btnVerConsulta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVerConsulta.setForeground(new java.awt.Color(0, 51, 102));
        btnVerConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ver_enabled.png"))); // NOI18N
        btnVerConsulta.setText("Ver");
        btnVerConsulta.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnVerConsulta.setContentAreaFilled(false);
        btnVerConsulta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerConsulta.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVerConsulta.setNextFocusableComponent(btnNuevaCompleta);
        btnVerConsulta.setOpaque(true);
        btnVerConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerConsultaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerConsultaMouseExited(evt);
            }
        });
        btnVerConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConsultasLayout = new javax.swing.GroupLayout(pnlConsultas);
        pnlConsultas.setLayout(pnlConsultasLayout);
        pnlConsultasLayout.setHorizontalGroup(
            pnlConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                    .addComponent(btnVerConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlConsultasLayout.setVerticalGroup(
            pnlConsultasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConsultasLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVerConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Datos del Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlDatosPersonales.setForeground(new java.awt.Color(204, 204, 255));

        lblstaticDni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticDni.setText("Nro. Documento:");

        lblstaticNumAfiliado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticNumAfiliado.setText("Nro. Afiliado:");

        lblstaticObraSocial.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticObraSocial.setText("Obra Social:");

        lblstaticFechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticFechaNacimiento.setText("Fecha de Nacimiento:");

        lblDni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDni.setText("35953232");

        lblFechaNacimiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFechaNacimiento.setText("21/03/1991");

        lblNumeroAfiliado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNumeroAfiliado.setText("3-4534543-2");

        lblObraSocial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblObraSocial.setText("OSPAC");

        pnlAntecedentes.setBackground(new java.awt.Color(228, 228, 241));
        pnlAntecedentes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Antecedentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlAntecedentes.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        pnlAntecedentes.setMaximumSize(new java.awt.Dimension(500, 32767));
        pnlAntecedentes.setOpaque(false);

        btnGenerales.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnGenerales.setForeground(new java.awt.Color(0, 51, 102));
        btnGenerales.setText("Generales");
        btnGenerales.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnGenerales.setContentAreaFilled(false);
        btnGenerales.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGenerales.setNextFocusableComponent(btnGinecologicos);
        btnGenerales.setOpaque(true);
        btnGenerales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneralesActionPerformed(evt);
            }
        });

        btnGinecologicos.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnGinecologicos.setForeground(new java.awt.Color(0, 51, 102));
        btnGinecologicos.setText("Ginecológicos");
        btnGinecologicos.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnGinecologicos.setContentAreaFilled(false);
        btnGinecologicos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGinecologicos.setNextFocusableComponent(btnFamiliares);
        btnGinecologicos.setOpaque(true);
        btnGinecologicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGinecologicosActionPerformed(evt);
            }
        });

        btnFamiliares.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnFamiliares.setForeground(new java.awt.Color(0, 51, 102));
        btnFamiliares.setText("Familiares");
        btnFamiliares.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnFamiliares.setContentAreaFilled(false);
        btnFamiliares.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFamiliares.setNextFocusableComponent(btnVerConsulta);
        btnFamiliares.setOpaque(true);
        btnFamiliares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFamiliaresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAntecedentesLayout = new javax.swing.GroupLayout(pnlAntecedentes);
        pnlAntecedentes.setLayout(pnlAntecedentesLayout);
        pnlAntecedentesLayout.setHorizontalGroup(
            pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGenerales, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnGinecologicos, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnFamiliares, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAntecedentesLayout.setVerticalGroup(
            pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAntecedentesLayout.createSequentialGroup()
                .addGroup(pnlAntecedentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGenerales, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(btnGinecologicos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(btnFamiliares, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblstaticSangre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticSangre.setText("Sangre:");

        lblSangre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSangre.setText("0 -");

        btnModificarPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModificarPaciente.setForeground(new java.awt.Color(0, 51, 102));
        btnModificarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_enabled.png"))); // NOI18N
        btnModificarPaciente.setText("Modificar");
        btnModificarPaciente.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnModificarPaciente.setContentAreaFilled(false);
        btnModificarPaciente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarPaciente.setOpaque(true);
        btnModificarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarPacienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarPacienteMouseExited(evt);
            }
        });
        btnModificarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPacienteActionPerformed(evt);
            }
        });

        lblTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTelefono.setText("423654");

        lblstaticTelefono.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticTelefono.setText("Teléfono:");

        pnlApellidoNombre.setBackground(new java.awt.Color(228, 228, 241));
        pnlApellidoNombre.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 153, 153), new java.awt.Color(255, 255, 255), null));

        lblNombrePaciente.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        lblNombrePaciente.setForeground(new java.awt.Color(0, 51, 102));
        lblNombrePaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombrePaciente.setText("Lopez, Juan Carlos");
        lblNombrePaciente.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblstaticNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticNombre.setText("Apellido y Nombre:");

        javax.swing.GroupLayout pnlApellidoNombreLayout = new javax.swing.GroupLayout(pnlApellidoNombre);
        pnlApellidoNombre.setLayout(pnlApellidoNombreLayout);
        pnlApellidoNombreLayout.setHorizontalGroup(
            pnlApellidoNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApellidoNombreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblstaticNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNombrePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlApellidoNombreLayout.setVerticalGroup(
            pnlApellidoNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlApellidoNombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblNombrePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addComponent(lblstaticNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
        );

        lblstaticEdad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticEdad.setText("Edad:");

        lblEdad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEdad.setText("0");

        javax.swing.GroupLayout pnlDatosPersonalesLayout = new javax.swing.GroupLayout(pnlDatosPersonales);
        pnlDatosPersonales.setLayout(pnlDatosPersonalesLayout);
        pnlDatosPersonalesLayout.setHorizontalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblstaticEdad)
                            .addComponent(lblstaticFechaNacimiento)
                            .addComponent(lblstaticDni)
                            .addComponent(btnModificarPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEdad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(lblDni, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                            .addComponent(lblFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblstaticSangre)
                                    .addComponent(lblstaticTelefono))
                                .addGap(18, 18, 18)
                                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                        .addComponent(lblTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                        .addGap(33, 33, 33)
                                        .addComponent(lblstaticObraSocial))
                                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                        .addComponent(lblSangre, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                                        .addGap(119, 119, 119)
                                        .addComponent(lblstaticNumAfiliado)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNumeroAfiliado, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(lblObraSocial, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))
                            .addComponent(pnlAntecedentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(pnlApellidoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDatosPersonalesLayout.setVerticalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addComponent(pnlApellidoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblstaticFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblObraSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblstaticObraSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblstaticTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblstaticDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblstaticSangre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSangre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblstaticNumAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(lblNumeroAfiliado))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstaticEdad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEdad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnModificarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
                    .addComponent(pnlAntecedentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlNuevaConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(127, 127, 127)
                .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlConsultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlConsultas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlNuevaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaCompletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCompletaActionPerformed
        for (JFrame aux : ventanasAbiertas){
            if (aux instanceof ABMConsultaCompleta && ((ABMConsultaCompleta)aux).getTipoConsulta() == 2 && ((ABMConsultaCompleta)aux).getIdConsulta() == -1){
                aux.setVisible(true);
                return;
            }
        }
        ABMConsultaCompleta consultaCompleta = new ABMConsultaCompleta(this, true, 2,paciente.getDni(), paciente);
        ventanasAbiertas.add(consultaCompleta);
        consultaCompleta.setVisible(true);
        consultaCompleta.requestFocus();
    }//GEN-LAST:event_btnNuevaCompletaActionPerformed

    private void btnNuevaGinecologicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaGinecologicaActionPerformed
        for (JFrame aux : ventanasAbiertas){
            if (aux instanceof ABMConsultaCompleta && ((ABMConsultaCompleta)aux).getTipoConsulta() == 1 && ((ABMConsultaCompleta)aux).getIdConsulta() == -1){
                aux.setVisible(true);
                return;
            }
        }
        ABMConsultaCompleta consultaGinecologica = new ABMConsultaCompleta(this, true, 1,paciente.getDni(), paciente);
        ventanasAbiertas.add(consultaGinecologica);
        consultaGinecologica.setVisible(true);
        consultaGinecologica.requestFocus();
    }//GEN-LAST:event_btnNuevaGinecologicaActionPerformed

    private void btnNuevaObstetricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaObstetricaActionPerformed
        for (JFrame aux : ventanasAbiertas){
            if (aux instanceof ABMConsultaCompleta && ((ABMConsultaCompleta)aux).getTipoConsulta() == 0 && ((ABMConsultaCompleta)aux).getIdConsulta() == -1){
                aux.setVisible(true);
                return;
            }
        }
        ABMConsultaCompleta consultaObstetrica = new ABMConsultaCompleta(this, true, 0,paciente.getDni(), paciente);
        ventanasAbiertas.add(consultaObstetrica);
        consultaObstetrica.setVisible(true);
        consultaObstetrica.requestFocus();
    }//GEN-LAST:event_btnNuevaObstetricaActionPerformed

    private void btnGeneralesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneralesActionPerformed
       if(!AntecGenModificado)
       {
            paciente.setAntecGen(daoAntecGen.getAntecedenteGeneral(paciente.getDni()));
            AntecGenModificado = true;
       }
       antecedentesGenerales = new AntecGenerales(this,true,paciente);
       antecedentesGenerales.setVisible(true);
    }//GEN-LAST:event_btnGeneralesActionPerformed

    private void btnGinecologicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGinecologicosActionPerformed
        if(!AntecGinecModificado)
        {
            paciente.setAntecGinec(daoAntecGinec.getAntecedenteGinecologico(paciente.getDni()));
            AntecGinecModificado = true;
        }
        antecedentesGinecologicos = new AntecGinecologicos(this,true,paciente);
        antecedentesGinecologicos.setVisible(true);
    }//GEN-LAST:event_btnGinecologicosActionPerformed

    private void btnFamiliaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFamiliaresActionPerformed
       if(!AntecFamModificado)
       {
        paciente.setAntecFam(daoAntecFam.getAntecedenteFamiliar(paciente.getDni()));
        AntecFamModificado = true;
       }
        antecedentesFamiliares = new AntecFamiliares(this,true,paciente);
        antecedentesFamiliares.setVisible(true);
        
    }//GEN-LAST:event_btnFamiliaresActionPerformed

    private void btnVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseEntered
        this.setearLabels(btnVolver, true);
    }//GEN-LAST:event_btnVolverMouseEntered

    private void btnVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseExited
        this.setearLabels(btnVolver, false);
    }//GEN-LAST:event_btnVolverMouseExited

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        antecesor.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnModificarPacienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarPacienteMouseEntered
        this.setearLabels(btnModificarPaciente, true);
    }//GEN-LAST:event_btnModificarPacienteMouseEntered

    private void btnModificarPacienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarPacienteMouseExited
        this.setearLabels(btnModificarPaciente, false);
    }//GEN-LAST:event_btnModificarPacienteMouseExited

    private void btnModificarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPacienteActionPerformed
        for (JFrame aux : ventanasAbiertas){
            if (aux instanceof ABMPacienteCompleto)
                aux.setVisible(true);
                return;
        }      
        paciente = daoPaciente.getPacienteCompleto(paciente.getDni());
        if(AntecFamModificado == false)
        {
            paciente.setAntecFam(daoAntecFam.getAntecedenteFamiliar(paciente.getDni()));
            AntecFamModificado = true;
        }

        if(AntecGenModificado == false)
        {
            paciente.setAntecGen(daoAntecGen.getAntecedenteGeneral(paciente.getDni()));
            AntecGenModificado = true;
        }

        if(AntecGinecModificado == false)
        {
            paciente.setAntecGinec(daoAntecGinec.getAntecedenteGinecologico(paciente.getDni()));
            AntecGinecModificado = true;
        }
        ABMPacienteCompleto pacienteInterfaz = new ABMPacienteCompleto(this,true,2,this.paciente);
        ventanasAbiertas.add(pacienteInterfaz);
        pacienteInterfaz.setVisible(true);
    }//GEN-LAST:event_btnModificarPacienteActionPerformed

    private void btnVerConsultaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerConsultaMouseEntered
        this.setearLabels(btnVerConsulta, true);
    }//GEN-LAST:event_btnVerConsultaMouseEntered

    private void btnVerConsultaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerConsultaMouseExited
        this.setearLabels(btnVerConsulta, false);
    }//GEN-LAST:event_btnVerConsultaMouseExited

    private void btnVerConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerConsultaActionPerformed
        int j = 0, id = this.tblConsultas.getSelectedRow();
            for (JFrame aux : ventanasAbiertas){
                if (aux instanceof ABMConsultaCompleta) {
                    ABMConsultaCompleta auxCons = (ABMConsultaCompleta) aux;
                    if (auxCons.getIdConsulta() == this.consultasDeTabla.get(id).getId()){
                        aux.setVisible(true);
                        return;
                    }
                }
            }
            Consulta c = daoConsulta.getConsultaCompleta(this.consultasDeTabla.get(id).getId(),paciente.getDni());
            if(c.getTipoConsulta().compareTo("Completa") == 0)
                j = 2;
            else if (c.getTipoConsulta().compareTo("Ginecologica") == 0)
                j = 1;
            else if (c.getTipoConsulta().compareTo("Obstetrica") == 0)
                j = 0;
            ABMConsultaCompleta cons = new ABMConsultaCompleta(this, false,j,paciente.getDni(),paciente, c);
            cons.setVisible(true);
            cons.requestFocus();
            ventanasAbiertas.add(cons);
    }//GEN-LAST:event_btnVerConsultaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        antecesor.cerrarHijo(this);
        cerrarVentanasAbiertas();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void setearLabels(JButton jbtn, boolean entrada){
        if(jbtn.isEnabled())
            if (entrada) {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 15));
            }
            else {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 14));
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFamiliares;
    private javax.swing.JButton btnGenerales;
    private javax.swing.JButton btnGinecologicos;
    private javax.swing.JButton btnModificarPaciente;
    private javax.swing.JButton btnNuevaCompleta;
    private javax.swing.JButton btnNuevaGinecologica;
    private javax.swing.JButton btnNuevaObstetrica;
    private javax.swing.JButton btnVerConsulta;
    private javax.swing.JButton btnVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblFechaNacimiento;
    private javax.swing.JLabel lblNombrePaciente;
    private javax.swing.JLabel lblNumeroAfiliado;
    private javax.swing.JLabel lblObraSocial;
    private javax.swing.JLabel lblSangre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblstaticDni;
    private javax.swing.JLabel lblstaticEdad;
    private javax.swing.JLabel lblstaticFechaNacimiento;
    private javax.swing.JLabel lblstaticNombre;
    private javax.swing.JLabel lblstaticNumAfiliado;
    private javax.swing.JLabel lblstaticObraSocial;
    private javax.swing.JLabel lblstaticSangre;
    private javax.swing.JLabel lblstaticTelefono;
    private javax.swing.JPanel pnlAntecedentes;
    private javax.swing.JPanel pnlApellidoNombre;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlConsultas;
    private javax.swing.JPanel pnlDatosPersonales;
    private javax.swing.JPanel pnlNuevaConsulta;
    private javax.swing.JTable tblConsultas;
    // End of variables declaration//GEN-END:variables
    public Paciente getPaciente() {
        return paciente;
    }

    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }
    
    /**
     * Metodo utilizado para llenar los campos de la historia clinica de un paciente
     * @param p Paciente
     */
    public void llenarCampos(Paciente p,int procedencia) {
        this.lblNombrePaciente.setText(p.getApellido()+", "+p.getNombre());
        
        this.lblFechaNacimiento.setText(p.getFechaNacimiento());
        lblEdad.setText(calcularEdad(p.getFechaNacimiento())+"");
        
        this.lblNumeroAfiliado.setText(p.getNumeroAfiliado());
        this.lblObraSocial.setText(p.getObraSocial().getNombre());
        this.lblTelefono.setText(p.getTelefono());
        this.lblDni.setText(p.getDni()+"");
        
        if(p.getFactor())
            this.lblSangre.setText(p.getGrupoSanguineo()+" +");   
        else
            this.lblSangre.setText(p.getGrupoSanguineo()+" -");
    }
    
    /**
     * Metodo utilizado para cambiar el tamaño de una tabla
     * @param dtmPacientes DefaultTableModel a cambiar
     * @param j tamaño nuevo
     */
    private void cambiarTamañoTabla(DefaultTableModel dtm,int j) {
        dtm.setNumRows(j);
    }
    
    /**
     * Metodo utilizado para llenar la tabla de consultas
     * @param dni dni del paciente al cual le corresponden las consultas
     */
    public void llenarTabla(long dni) {
        Object[] o;
        dtmConsultas = (DefaultTableModel) this.tblConsultas.getModel();
        borrarFilas(dtmConsultas);
        consultasDeTabla = new LinkedList<>();
        consultasDeTabla = daoConsulta.getAllConsultasTabla(dni);
        
        if(consultasDeTabla.size() == 0)
            cambiarTamañoTabla(dtmConsultas,8);
        else
        {
            cambiarTamañoTabla(dtmConsultas,0);
            this.btnVerConsulta.setEnabled(true);
        }
        for (int i = 0; i < consultasDeTabla.size(); i++) {
            o = new Object[4];
            o[0] = consultasDeTabla.get(i).getFecha();
            o[1] = consultasDeTabla.get(i).getMotivo();
            o[2] = consultasDeTabla.get(i).getDiagnostico();
            o[3] = consultasDeTabla.get(i).getTipoConsulta();
            dtmConsultas.addRow(o);
        }
        tblConsultas.changeSelection(0, 0, false, false);
    }
    
    
    /**
     * Metodo utilizado para borrar las filas de una tabla
     * @param dtmPacientes DefaultTableModel a partir del cual borrar
     */
    private void borrarFilas(DefaultTableModel dtmPacientes) {
        int j = dtmPacientes.getRowCount();
        for (int i = 0; i < dtmPacientes.getRowCount();) {
            dtmPacientes.removeRow(0);
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }

    private int calcularEdad(String fechaNacimiento) {
        Calendar c = Calendar.getInstance();
        int diaActual = c.get(Calendar.DAY_OF_MONTH);
        int mesActual = c.get(Calendar.MONTH)+1;
        int añoActual = c.get(Calendar.YEAR);
        
        int diaNacimiento = Integer.parseInt(fechaNacimiento.substring(0, 2));
        int mesNacimiento = Integer.parseInt(fechaNacimiento.substring(3, 5));
        int añoNacimiento = Integer.parseInt(fechaNacimiento.substring(6, 10));
        
        int edad = añoActual - añoNacimiento;
        
        if(mesActual < mesNacimiento)
            return edad-1;
        else
            if ((mesActual == mesNacimiento) && (diaActual < diaNacimiento))
                return edad-1;
        
        return edad;
        }

    /**
     * Método público que se encarga de comunicar cambios de colores de interfaz a aquellas ventanas que tengan como padre a instancias de esta clase.
     */
    public void pintarHijos(int color) {
        for (JFrame window :  ventanasAbiertas){
                ClasesBase.GestorEstilos.pintar(window, color);
        }
        if(antecedentesFamiliares != null)
            ClasesBase.GestorEstilos.pintar(antecedentesFamiliares, color);
        if(antecedentesGenerales != null)
            ClasesBase.GestorEstilos.pintar(antecedentesGenerales, color);
        if(antecedentesGinecologicos != null)
            ClasesBase.GestorEstilos.pintar(antecedentesGinecologicos, color);
    }
    
    /**
     * Comunica a la ventana que alguno de los JFrames que la tenían cómo owner ha sido cerrado
     * @param closedWindow ventana que ha sido cerrada
     */
    public void cerrarHijo(JFrame closedWindow){
        if (closedWindow != null)
            ventanasAbiertas.remove(closedWindow);
    }
    
    /**
     * Devuelve el dni del paciente al cual pertenece la historia clínica
     * @return el dni del paciente al cual pertenece la historia clínica
     */
    public long getDniPaciente(){
        return paciente.getDni();
    }

    private void cerrarVentanasAbiertas() {
        for (JFrame window : ventanasAbiertas){
            window.dispose();
        }
        ventanasAbiertas.clear();
    }
    
    }
