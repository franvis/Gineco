package GUI;

import ClasesBase.modelo.Paciente;
import ClasesBase.*;
import DAO.DAOPaciente;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

public class Principal extends javax.swing.JFrame {
    
    private ABMPacienteCompleto pacienteInterfaz;
    private HistoriaClinica HC;
    private DefaultTableModel dtmPacientes;
    private DAOPaciente daoPaciente;
    private LinkedList<Paciente> listaPacientes;
    private Paciente p;
    private ABMObrasSociales abmObrasSociales;
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        setearIniciales();
        listaPacientes = new LinkedList<>();
        daoPaciente = new DAOPaciente();
        this.setearButtons(btnModificarPaciente, false);
        this.setearButtons(btnNuevoPaciente, false);
        this.setearButtons(btnRealizarBackUp, false);
        this.setearButtons(btnVerHC, false);
        tblPacientes.getColumn("Apellido").setResizable(false);
        tblPacientes.getColumn("Nombre").setResizable(false);
        tblPacientes.getColumn("Fecha de Nacimiento").setResizable(false);
        tblPacientes.getColumn("Última Consulta").setResizable(false);
        tblPacientes.setDefaultRenderer(Object.class, new MultiLineCellRenderer());
        tblPacientes.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 14)); 
        dtmPacientes = (DefaultTableModel) this.tblPacientes.getModel();
        cambiarTamañoTabla(dtmPacientes,10);
        this.setLocationRelativeTo(getRootPane());
        GestorEstilos.pintar(this);
        this.setExtendedState(this.MAXIMIZED_BOTH);
        //this.setMaximumSize(this.getToolkit().getScreenSize());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /*
             * Set the Nimbus look and feel
             */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /*
             * If Nimbus (introduced in Java SE 6) is not available, stay with the
             * default look and feel. For details see
             * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                        
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //</editor-fold>

        ManejoArchivos.backUpAutomatico();
        /*
         * Create and display the form
         */

        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        pnlBuscar = new javax.swing.JPanel();
        txtfApellido = new javax.swing.JTextField();
        lblstaticApellido = new javax.swing.JLabel();
        lblstaticDni = new javax.swing.JLabel();
        txtfDni = new javax.swing.JTextField();
        txtfNombre = new javax.swing.JTextField();
        lblstaticNombre = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnNuevoPaciente = new javax.swing.JButton();
        btnVerHC = new javax.swing.JButton();
        btnModificarPaciente = new javax.swing.JButton();
        btnRealizarBackUp = new javax.swing.JButton();
        pnlTablaPacientes = new javax.swing.JPanel();
        scrollPaneTablaPacientes = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuNuevoPaciente = new javax.swing.JMenuItem();
        menuRealizarBackUp = new javax.swing.JMenuItem();
        menuObrasSociales = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSalir = new javax.swing.JMenuItem();
        menuVentana = new javax.swing.JMenu();
        menuCambiarColor = new javax.swing.JMenuItem();
        menuVer = new javax.swing.JMenu();
        menuAcercaDe = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión de Pacientes");
        setBounds(new java.awt.Rectangle(5, 5, 0, 0));
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(824, 443));
        setName("principal"); // NOI18N

        pnlBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), "Buscar por", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        pnlBuscar.setToolTipText("");
        pnlBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtfApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfApellidoKeyReleased(evt);
            }
        });

        lblstaticApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticApellido.setText("Apellido:");

        lblstaticDni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticDni.setText("Nro. Doc.:");

        txtfDni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfDniKeyReleased(evt);
            }
        });

        txtfNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfNombreKeyReleased(evt);
            }
        });

        lblstaticNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblstaticNombre.setText("Nombre:");

        javax.swing.GroupLayout pnlBuscarLayout = new javax.swing.GroupLayout(pnlBuscar);
        pnlBuscar.setLayout(pnlBuscarLayout);
        pnlBuscarLayout.setHorizontalGroup(
            pnlBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblstaticApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblstaticNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblstaticDni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfDni, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlBuscarLayout.setVerticalGroup(
            pnlBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarLayout.createSequentialGroup()
                .addGroup(pnlBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfApellido)
                        .addComponent(txtfNombre)
                        .addComponent(txtfDni))
                    .addGroup(pnlBuscarLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pnlBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticApellido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblstaticNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblstaticDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pnlBotones.setBackground(new java.awt.Color(245, 245, 245));
        pnlBotones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        pnlBotones.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlBotones.setOpaque(false);

        btnNuevoPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNuevoPaciente.setForeground(new java.awt.Color(153, 153, 153));
        btnNuevoPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add_user_enabled.png"))); // NOI18N
        btnNuevoPaciente.setText("Nuevo Paciente");
        btnNuevoPaciente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevoPaciente.setContentAreaFilled(false);
        btnNuevoPaciente.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add_user_not_enabled.png"))); // NOI18N
        btnNuevoPaciente.setEnabled(false);
        btnNuevoPaciente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevoPaciente.setOpaque(true);
        btnNuevoPaciente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevoPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevoPacienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevoPacienteMouseExited(evt);
            }
        });
        btnNuevoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoPacienteActionPerformed(evt);
            }
        });

        btnVerHC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVerHC.setForeground(new java.awt.Color(153, 153, 153));
        btnVerHC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/HC_enabled.png"))); // NOI18N
        btnVerHC.setText("Ver Historia Clínica");
        btnVerHC.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVerHC.setContentAreaFilled(false);
        btnVerHC.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/HC_not_enabled.png"))); // NOI18N
        btnVerHC.setEnabled(false);
        btnVerHC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVerHC.setOpaque(true);
        btnVerHC.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVerHC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerHCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerHCMouseExited(evt);
            }
        });
        btnVerHC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerHCActionPerformed(evt);
            }
        });

        btnModificarPaciente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModificarPaciente.setForeground(new java.awt.Color(153, 153, 153));
        btnModificarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_profile_enabled.png"))); // NOI18N
        btnModificarPaciente.setText("Modificar Paciente");
        btnModificarPaciente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificarPaciente.setContentAreaFilled(false);
        btnModificarPaciente.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_profile_not_enabled.png"))); // NOI18N
        btnModificarPaciente.setEnabled(false);
        btnModificarPaciente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificarPaciente.setOpaque(true);
        btnModificarPaciente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarPacienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarPacienteMouseExited(evt);
            }
        });
        btnModificarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPacienteActionPerformed(evt);
            }
        });

        btnRealizarBackUp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRealizarBackUp.setForeground(new java.awt.Color(153, 153, 153));
        btnRealizarBackUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/backup_enabled.png"))); // NOI18N
        btnRealizarBackUp.setText("Realizar Back Up");
        btnRealizarBackUp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRealizarBackUp.setContentAreaFilled(false);
        btnRealizarBackUp.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/backup_not_enabled.png"))); // NOI18N
        btnRealizarBackUp.setEnabled(false);
        btnRealizarBackUp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRealizarBackUp.setOpaque(true);
        btnRealizarBackUp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRealizarBackUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRealizarBackUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRealizarBackUpMouseExited(evt);
            }
        });
        btnRealizarBackUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarBackUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnNuevoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
            .addComponent(btnVerHC, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
            .addComponent(btnModificarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
            .addComponent(btnRealizarBackUp, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addComponent(btnNuevoPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerHC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificarPaciente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRealizarBackUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pnlTablaPacientes.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabla de Pacientes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        pnlTablaPacientes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblPacientes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", ""},
                {"", null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Apellido", "Nombre", "Fecha de Nacimiento", "Última Consulta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPacientes.setMaximumSize(new java.awt.Dimension(788, 443));
        tblPacientes.setOpaque(false);
        tblPacientes.getTableHeader().setReorderingAllowed(false);
        scrollPaneTablaPacientes.setViewportView(tblPacientes);

        javax.swing.GroupLayout pnlTablaPacientesLayout = new javax.swing.GroupLayout(pnlTablaPacientes);
        pnlTablaPacientes.setLayout(pnlTablaPacientesLayout);
        pnlTablaPacientesLayout.setHorizontalGroup(
            pnlTablaPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTablaPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneTablaPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTablaPacientesLayout.setVerticalGroup(
            pnlTablaPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTablaPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPaneTablaPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        menuArchivo.setText("Archivo");
        menuArchivo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuNuevoPaciente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNuevoPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuNuevoPaciente.setText("Nuevo Paciente");
        menuNuevoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNuevoPacienteActionPerformed(evt);
            }
        });
        menuArchivo.add(menuNuevoPaciente);

        menuRealizarBackUp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        menuRealizarBackUp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuRealizarBackUp.setText("Realizar Back Up");
        menuRealizarBackUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRealizarBackUpActionPerformed(evt);
            }
        });
        menuArchivo.add(menuRealizarBackUp);

        menuObrasSociales.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuObrasSociales.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuObrasSociales.setText("Gestion de Obras Sociales");
        menuObrasSociales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuObrasSocialesActionPerformed(evt);
            }
        });
        menuArchivo.add(menuObrasSociales);
        menuArchivo.add(jSeparator1);

        menuSalir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        menuArchivo.add(menuSalir);

        menuBar.add(menuArchivo);

        menuVentana.setText("Ventana");
        menuVentana.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuCambiarColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuCambiarColor.setText("Cambiar Color");
        menuCambiarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCambiarColorActionPerformed(evt);
            }
        });
        menuVentana.add(menuCambiarColor);

        menuBar.add(menuVentana);

        menuVer.setText("Ver");
        menuVer.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuAcercaDe.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuAcercaDe.setText("Acerca De...");
        menuAcercaDe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAcercaDeActionPerformed(evt);
            }
        });
        menuVer.add(menuAcercaDe);

        menuBar.add(menuVer);

        menuAyuda.setText("Ayuda");
        menuAyuda.setToolTipText("Próxima Versión");
        menuAyuda.setEnabled(false);
        menuAyuda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuBar.add(menuAyuda);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTablaPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTablaPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        this.validarSalida();
    }//GEN-LAST:event_menuSalirActionPerformed

    private void menuNuevoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNuevoPacienteActionPerformed
        this.nuevoPaciente();
    }//GEN-LAST:event_menuNuevoPacienteActionPerformed

    private void menuRealizarBackUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRealizarBackUpActionPerformed
        this.realizarBackUp();
    }//GEN-LAST:event_menuRealizarBackUpActionPerformed

    private void menuAcercaDeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAcercaDeActionPerformed
        MensajesValidaciones.mostrarAcercaDe(this);
    }//GEN-LAST:event_menuAcercaDeActionPerformed

    private void menuObrasSocialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuObrasSocialesActionPerformed
        this.abmObrasSociales = new ABMObrasSociales(this);
        this.abmObrasSociales.setVisible(true);
    }//GEN-LAST:event_menuObrasSocialesActionPerformed

    private void txtfApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfApellidoKeyReleased
        if(MensajesValidaciones.negarNumerosBool(evt,this))
            return;
        String apellido = "";
        int i = this.txtfApellido.getText().length();
        if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE){
            if(i > 1)
                apellido = this.txtfApellido.getText().substring(0, i);
            if(i == 1)
                apellido = this.txtfApellido.getText();
            else if(i == 0)
                apellido = "";   
        }
        else
            apellido = this.txtfApellido.getText();
        
        listaPacientes = new LinkedList<>();
        String nombre = this.txtfNombre.getText();
        String dni = this.txtfDni.getText();
        
        listaPacientes = daoPaciente.getAllPacientes(nombre, apellido, dni);
        
        llenarTabla(listaPacientes);        
    }//GEN-LAST:event_txtfApellidoKeyReleased

    private void txtfNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNombreKeyReleased
        if(MensajesValidaciones.negarNumerosBool(evt,this))
            return;
        String nombre = "";
        int i = this.txtfNombre.getText().length(); 
        if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE){
            if(i > 1 )
                nombre = this.txtfNombre.getText().substring(0, i);
            else if(i == 1)
                nombre = this.txtfNombre.getText();
            else if(i == 0)
                {
                nombre = "";
                }     
        }
        else
            nombre = this.txtfNombre.getText();
        
        String apellido = this.txtfApellido.getText();
        String dni = this.txtfDni.getText();
        
        listaPacientes = new LinkedList<>();
        
        listaPacientes = daoPaciente.getAllPacientes(nombre, apellido, dni);
        
        llenarTabla(listaPacientes);
    }//GEN-LAST:event_txtfNombreKeyReleased

    private void txtfDniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDniKeyReleased
        if(MensajesValidaciones.negarLetrasBool(evt,this))
            return;
        String dni = "";
        int i = this.txtfDni.getText().length(); 
        if(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE || evt.getKeyChar() == KeyEvent.VK_DELETE){
            if(i > 1 )
                dni = this.txtfDni.getText().substring(0, i);
            else if(i == 1)
                dni = this.txtfDni.getText();
            else if(i == 0)
                {
                dni = "";
                }     
        }
        else
        dni = this.txtfDni.getText();
        
        String nombre = this.txtfNombre.getText();
        String apellido = this.txtfApellido.getText();
        
        listaPacientes = new LinkedList<>();
        
        listaPacientes = daoPaciente.getAllPacientes(nombre, apellido, dni);
        
        llenarTabla(listaPacientes);

    }//GEN-LAST:event_txtfDniKeyReleased

    private void btnRealizarBackUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarBackUpActionPerformed
        this.realizarBackUp();
    }//GEN-LAST:event_btnRealizarBackUpActionPerformed

    private void btnRealizarBackUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRealizarBackUpMouseEntered
        this.setearButtons(btnRealizarBackUp, true);
    }//GEN-LAST:event_btnRealizarBackUpMouseEntered

    private void btnRealizarBackUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRealizarBackUpMouseExited
        this.setearButtons(btnRealizarBackUp, false);
    }//GEN-LAST:event_btnRealizarBackUpMouseExited

    private void btnModificarPacienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarPacienteMouseEntered
        this.setearButtons(btnModificarPaciente, true);
    }//GEN-LAST:event_btnModificarPacienteMouseEntered

    private void btnModificarPacienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarPacienteMouseExited
        this.setearButtons(btnModificarPaciente, false);
    }//GEN-LAST:event_btnModificarPacienteMouseExited

    private void btnModificarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPacienteActionPerformed
        if(!listaPacientes.isEmpty()){
            p = new Paciente();
            dtmPacientes = (DefaultTableModel) this.tblPacientes.getModel();
            p = listaPacientes.get(tblPacientes.getSelectedRow());
            p = daoPaciente.getPacienteCompleto(p.getDni());

            pacienteInterfaz = new ABMPacienteCompleto(this, true, 1, p);
            pacienteInterfaz.setVisible(true);
            setearButtons(btnModificarPaciente, false);
        }
    }//GEN-LAST:event_btnModificarPacienteActionPerformed

    private void btnVerHCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerHCMouseEntered
        this.setearButtons(btnVerHC, true);
    }//GEN-LAST:event_btnVerHCMouseEntered

    private void btnVerHCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerHCMouseExited
        this.setearButtons(btnVerHC, false);
    }//GEN-LAST:event_btnVerHCMouseExited

    private void btnVerHCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerHCActionPerformed
        if(!listaPacientes.isEmpty()){
            p = new Paciente();
            p = listaPacientes.get(tblPacientes.getSelectedRow());
            p = daoPaciente.getPaciente(p.getDni());

            HC = new HistoriaClinica(this, p, 0);
            HC.setVisible(true);
            borrarFilas(dtmPacientes);
            this.txtfApellido.setText("");
            this.txtfNombre.setText("");
            this.txtfDni.setText("");
            setearButtons(btnVerHC, false);
            listaPacientes.removeAll(listaPacientes);
            dtmPacientes.setNumRows(15);
        }
    }//GEN-LAST:event_btnVerHCActionPerformed

    private void btnNuevoPacienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoPacienteMouseEntered
        this.setearButtons(btnNuevoPaciente, true);
    }//GEN-LAST:event_btnNuevoPacienteMouseEntered

    private void btnNuevoPacienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoPacienteMouseExited
        this.setearButtons(btnNuevoPaciente, false);
    }//GEN-LAST:event_btnNuevoPacienteMouseExited

    private void btnNuevoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoPacienteActionPerformed
        this.nuevoPaciente();
    }//GEN-LAST:event_btnNuevoPacienteActionPerformed

private void menuCambiarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCambiarColorActionPerformed
        new EleccionColor(this, true).setVisible(true);
}//GEN-LAST:event_menuCambiarColorActionPerformed
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }
    
    /**
     * Setea los botones del menú principal según la ubicación del puntero
     * @param jbtn JButton a setear
     * @param entrada boolean true si el puntero entra al área del jButton, false si sale
     */
    private void setearButtons(JButton jbtn, boolean entrada){
        if(!listaPacientes.isEmpty() || (jbtn == btnNuevoPaciente || jbtn == btnRealizarBackUp)){
            if (entrada) {
                jbtn.setEnabled(true);
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 15));
                jbtn.setForeground(GestorEstilos.getColorTexto(GestorEstilos.colorActual));
            }
            else {
                jbtn.setEnabled(false);
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 14));
                jbtn.setForeground(new Color(153, 153, 153));
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModificarPaciente;
    private javax.swing.JButton btnNuevoPaciente;
    private javax.swing.JButton btnRealizarBackUp;
    private javax.swing.JButton btnVerHC;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JLabel lblstaticApellido;
    private javax.swing.JLabel lblstaticDni;
    private javax.swing.JLabel lblstaticNombre;
    private javax.swing.JMenuItem menuAcercaDe;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuCambiarColor;
    private javax.swing.JMenuItem menuNuevoPaciente;
    private javax.swing.JMenuItem menuObrasSociales;
    private javax.swing.JMenuItem menuRealizarBackUp;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JMenu menuVentana;
    private javax.swing.JMenu menuVer;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlBuscar;
    private javax.swing.JPanel pnlTablaPacientes;
    private javax.swing.JScrollPane scrollPaneTablaPacientes;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JTextField txtfApellido;
    private javax.swing.JTextField txtfDni;
    private javax.swing.JTextField txtfNombre;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Metodo utilizado para setear ciertos valores inciales de los componentes
     */
    private void setearIniciales() {
        this.txtfDni.setEditable(true);
    }

    /**
     * Metodo utilizado para cambiar el tamaño de una tabla
     * @param dtmPacientes DefaultTableModel a cambiar
     * @param j tamaño nuevo
     */
    private void cambiarTamañoTabla(DefaultTableModel dtm,int j) {
        dtm.setNumRows(j);
    }
    
    /**
     * Metodo utilizado para llenar la tabla de pacientes
     * @param listaPacientes lista de pacientes para completar la tabla
     */
    private void llenarTabla(LinkedList<Paciente> listaPacientes) {
        Object[] o;
        dtmPacientes = (DefaultTableModel) this.tblPacientes.getModel();
        borrarFilas(dtmPacientes);
        LinkedList<Paciente> lista = listaPacientes;
        if(lista.size() == 0)  
            cambiarTamañoTabla(dtmPacientes,10);
        else
            cambiarTamañoTabla(dtmPacientes,0);
        
        for (int i = 0; i < lista.size(); i++) {
            o = new Object[4];
            o[0] = lista.get(i).getApellido();
            o[1] = lista.get(i).getNombre();
            o[2] = lista.get(i).getFechaNacimiento();
            o[3] = lista.get(i).getFechaUltimaConsulta();
            dtmPacientes.addRow(o);
        }
        tblPacientes.changeSelection(0, 0, false, false);
        if (listaPacientes.isEmpty()){
            btnModificarPaciente.setEnabled(false);
            btnVerHC.setEnabled(false);
        }
    }
    
    /**
     * Metodo utilizado para borrar las filas de una tabla
     * @param dtmPacientes DefaultTableModel a partir del cual borrar
     */
    private void borrarFilas(DefaultTableModel dtmPacientes) {
        int j = dtmPacientes.getRowCount();
        for (int i = 0; i < dtmPacientes.getRowCount();) {
            dtmPacientes.removeRow(0);
        }
    }
    
    /**
     * Metodo utilizado para registrar un nuevo paciente
     */
    private void nuevoPaciente() {
        pacienteInterfaz = new ABMPacienteCompleto(this,true,0);
        pacienteInterfaz.setVisible(true);
        setearButtons(btnModificarPaciente, false);
    }

    /**
     * Metodo utilizado para realizar un back up manual
     */
    private void realizarBackUp() {
        JFileChooser jfd = new JFileChooser();
        jfd.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfd.setDialogTitle("Elija un directorio destino para el archivo de Back Up...");
        int r = jfd.showSaveDialog(this);
        if (r == JFileChooser.APPROVE_OPTION){
            ManejoArchivos.backUp(this, jfd.getSelectedFile());     
        }
    }
    
    /**
     * Metodo utilizado para validar la salida
     */
    private void validarSalida() {
        MensajesValidaciones.validarSalida(this);
    }
    
    /**
     * Metodo utilizado para setear desde otras ventana la lista de pacientes a mostrarse en la tabla
     */
    public void actualizarListaPacientes(LinkedList<Paciente> listaPacientes) {
        if(listaPacientes == null){
            this.listaPacientes = new LinkedList<>();
            borrarFilas(dtmPacientes);
            this.txtfApellido.setText("");
            this.txtfNombre.setText("");
            this.txtfDni.setText("");
            dtmPacientes.setNumRows(10);
        }
        else {
            this.listaPacientes = listaPacientes;
            llenarTabla(listaPacientes);
        }
    }
    
    /**
     * Método que setea el nuevo color elegido en las interfaces
     * hijas de ésta ventana
     */
    public void pintarHijos()
    {
        if(HC != null){
            ClasesBase.GestorEstilos.pintar(HC);
            HC.pintarHijos();}
        if(pacienteInterfaz != null)
            ClasesBase.GestorEstilos.pintar(pacienteInterfaz);
        if(abmObrasSociales != null)
            ClasesBase.GestorEstilos.pintar(abmObrasSociales);
    }
    
}
