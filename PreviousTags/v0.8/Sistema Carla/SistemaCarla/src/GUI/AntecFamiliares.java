/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ClasesBase.AntecedentesFamiliares;
import ClasesBase.MensajesValidaciones;
import ClasesBase.Paciente;
import DAO.DAOAntecedentesFamiliares;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;

public class AntecFamiliares extends javax.swing.JDialog {
    private AntecedentesFamiliares afam;
    private DAOAntecedentesFamiliares daoAntecFam;
    private Paciente paciente;
    /**
     * Creates new form AntecFamiliares
     */
    public AntecFamiliares(java.awt.Frame parent, boolean modal,Paciente p) {
        super(parent, modal);
        initComponents();
        paciente = p;
        daoAntecFam = new DAOAntecedentesFamiliares();
        llenarCajas(p);
        CambiarEstadoCajas(false);
        this.btnModificar.grabFocus();
        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpDiabetes = new javax.swing.ButtonGroup();
        btngrpHA = new javax.swing.ButtonGroup();
        btngrpCancer = new javax.swing.ButtonGroup();
        btngrpTiroides = new javax.swing.ButtonGroup();
        pnlFamiliares = new javax.swing.JPanel();
        lblstaticCA = new javax.swing.JLabel();
        lblstaticDiabetes = new javax.swing.JLabel();
        txtfTiroides = new javax.swing.JTextField();
        lblstaticTensionA = new javax.swing.JLabel();
        lblstaticTiroides = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtaOncologicos = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaFamObservaciones = new javax.swing.JTextArea();
        lblstaticFamObservaciones = new javax.swing.JLabel();
        chkDiabetes = new javax.swing.JCheckBox();
        chkTiroides = new javax.swing.JCheckBox();
        chkHipertension = new javax.swing.JCheckBox();
        chkOncologicos = new javax.swing.JCheckBox();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnVolver2 = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Antecedentes Familiares");

        lblstaticCA.setText("Oncológicos:");

        lblstaticDiabetes.setText("Diabetes:");

        txtfTiroides.setEditable(false);
        txtfTiroides.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTiroidesKeyTyped(evt);
            }
        });

        lblstaticTensionA.setText("Hipertensión Arterial:");

        lblstaticTiroides.setText("Tiroides:");

        txtaOncologicos.setColumns(16);
        txtaOncologicos.setEditable(false);
        txtaOncologicos.setRows(2);
        txtaOncologicos.setTabSize(0);
        txtaOncologicos.setNextFocusableComponent(chkHipertension);
        txtaOncologicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaOncologicosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(txtaOncologicos);

        txtaFamObservaciones.setColumns(20);
        txtaFamObservaciones.setEditable(false);
        txtaFamObservaciones.setRows(5);
        txtaFamObservaciones.setTabSize(0);
        txtaFamObservaciones.setNextFocusableComponent(btnGuardar);
        txtaFamObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaFamObservacionesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtaFamObservaciones);

        lblstaticFamObservaciones.setText("Observaciones:");

        chkDiabetes.setNextFocusableComponent(chkHipertension);

        chkTiroides.setText(" ");
        chkTiroides.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkTiroidesStateChanged(evt);
            }
        });

        chkHipertension.setText(" ");
        chkHipertension.setNextFocusableComponent(chkTiroides);

        chkOncologicos.setText(" ");
        chkOncologicos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkOncologicosStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlFamiliaresLayout = new javax.swing.GroupLayout(pnlFamiliares);
        pnlFamiliares.setLayout(pnlFamiliaresLayout);
        pnlFamiliaresLayout.setHorizontalGroup(
            pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblstaticFamObservaciones)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticTensionA)
                            .addComponent(lblstaticDiabetes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                                .addComponent(chkDiabetes)
                                .addGap(38, 38, 38)
                                .addComponent(lblstaticCA)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkOncologicos))
                            .addComponent(chkHipertension)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFamiliaresLayout.createSequentialGroup()
                                .addComponent(lblstaticTiroides, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkTiroides)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .addComponent(txtfTiroides))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFamiliaresLayout.setVerticalGroup(
            pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkDiabetes)
                            .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblstaticDiabetes)
                                .addComponent(lblstaticCA))
                            .addComponent(chkOncologicos))
                        .addGap(15, 15, 15)
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkHipertension)
                            .addComponent(lblstaticTensionA))
                        .addGap(53, 53, 53)
                        .addComponent(lblstaticFamObservaciones))
                    .addGroup(pnlFamiliaresLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFamiliaresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfTiroides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkTiroides)
                            .addComponent(lblstaticTiroides))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        btnModificar.setText("Modificar");
        btnModificar.setNextFocusableComponent(chkDiabetes);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVolver2.setText("Volver");
        btnVolver2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver2ActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlFamiliares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFamiliares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnVolver2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolver2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver2ActionPerformed
    this.dispose();
    }//GEN-LAST:event_btnVolver2ActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
     this.btnModificar.nextFocus();
     CambiarEstadoCajas(true);
     this.btnGuardar.setEnabled(true);
     this.btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    afam = new AntecedentesFamiliares();
    afam.setDbt(this.chkDiabetes.isSelected());
    afam.setHta(this.chkHipertension.isSelected());
    afam.setOncologicos(this.chkOncologicos.isSelected());
    afam.setTiroides(this.chkTiroides.isSelected());
    afam.setDescripcionOncologicos(this.txtaOncologicos.getText());
    afam.setDescripcionTiroides(this.txtfTiroides.getText());
    afam.setObservaciones(this.txtaFamObservaciones.getText());
    if(daoAntecFam.actualizarAntecedente(afam, paciente.getDni()))
        MensajesValidaciones.mostrarInformacion(this, "Actualización Exitosa.");
    else
        MensajesValidaciones.mostrarError(this, "Actualización Fallida.");
    paciente.setAntecFam(afam);
    CambiarEstadoCajas(false);
    this.btnGuardar.setEnabled(false);
    this.btnModificar.setEnabled(true);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void chkTiroidesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkTiroidesStateChanged
     if(!this.chkTiroides.isSelected())
        {
        this.chkOncologicos.grabFocus();
        this.txtfTiroides.setEditable(false);
        this.txtfTiroides.setText("");
        }
     else
     {
        this.txtfTiroides.grabFocus();
        this.txtfTiroides.setEditable(false);
        this.txtfTiroides.setText("");
     }
    }//GEN-LAST:event_chkTiroidesStateChanged

    private void chkOncologicosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkOncologicosStateChanged
     if(!this.chkOncologicos.isSelected())
        {
        this.txtaOncologicos.setEditable(false);
        this.txtaOncologicos.setText("");
        }
     else
     {
        this.txtaOncologicos.setEditable(true);
     }
    }//GEN-LAST:event_chkOncologicosStateChanged

    private void txtfTiroidesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTiroidesKeyTyped
         MensajesValidaciones.limitarLargo(this.txtfTiroides, evt, 45,this);
    }//GEN-LAST:event_txtfTiroidesKeyTyped

private void txtaFamObservacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaFamObservacionesKeyPressed
    if(evt.getKeyChar() == KeyEvent.VK_TAB)
    {
        this.txtaFamObservaciones.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaFamObservacionesKeyPressed

private void txtaOncologicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaOncologicosKeyPressed
    if(evt.getKeyChar() == KeyEvent.VK_TAB)
    {
        this.txtaOncologicos.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaOncologicosKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVolver2;
    private javax.swing.ButtonGroup btngrpCancer;
    private javax.swing.ButtonGroup btngrpDiabetes;
    private javax.swing.ButtonGroup btngrpHA;
    private javax.swing.ButtonGroup btngrpTiroides;
    private javax.swing.JCheckBox chkDiabetes;
    private javax.swing.JCheckBox chkHipertension;
    private javax.swing.JCheckBox chkOncologicos;
    private javax.swing.JCheckBox chkTiroides;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblstaticCA;
    private javax.swing.JLabel lblstaticDiabetes;
    private javax.swing.JLabel lblstaticFamObservaciones;
    private javax.swing.JLabel lblstaticTensionA;
    private javax.swing.JLabel lblstaticTiroides;
    private javax.swing.JPanel pnlFamiliares;
    private javax.swing.JTextArea txtaFamObservaciones;
    private javax.swing.JTextArea txtaOncologicos;
    private javax.swing.JTextField txtfTiroides;
    // End of variables declaration//GEN-END:variables

    private void llenarCajas(AntecedentesFamiliares af) {
        this.txtaFamObservaciones.setText(af.getObservaciones());
        this.txtaOncologicos.setText(af.getDescripcionOncologicos());
        this.txtfTiroides.setText(af.getDescripcionTiroides());
        
        if(af.isTiroides())
            this.chkTiroides.setSelected(true);
        
        if(af.isOncologicos())
            this.chkOncologicos.setSelected(true);

        if(af.isDbt())
            this.chkDiabetes.setSelected(true);
        
        if(af.isHta())
            this.chkHipertension.setSelected(true);
    }
    private void llenarCajas(Paciente p) {
        this.txtaFamObservaciones.setText(p.getAntecFam().getObservaciones());
        this.txtaOncologicos.setText(p.getAntecFam().getDescripcionOncologicos());
        this.txtfTiroides.setText(p.getAntecFam().getDescripcionTiroides());
        
        if(p.getAntecFam().isTiroides())
            this.chkTiroides.setSelected(true);
        
        if(p.getAntecFam().isOncologicos())
            this.chkOncologicos.setSelected(true);
        
        if(p.getAntecFam().isDbt())
            this.chkDiabetes.setSelected(true);
        
        if(p.getAntecFam().isHta())
            this.chkHipertension.setSelected(true);
    }

    private void CambiarEstadoCajas(boolean accion)
    {
        this.txtaFamObservaciones.setEditable(accion);
        this.txtaOncologicos.setEditable(accion);
        this.txtfTiroides.setEditable(accion);
        this.chkTiroides.setEnabled(accion);
        this.chkOncologicos.setEnabled(accion);
        this.chkDiabetes.setEnabled(accion);
        this.chkHipertension.setEnabled(accion);
    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }
}
