package GUI;

import ClasesBase.*;
import DAO.DAOObraSocial;
import DAO.DAOPaciente;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;

public class ABMPacienteCompleto extends javax.swing.JDialog {
    private Frame padre;
    private Principal padreP;
    private HistoriaClinica hc;
    private DAOPaciente daoPaciente;
    private Paciente p;
    private DAOObraSocial daoObraSocial;
    private LinkedList<ObraSocial> obras;
    private AntecedentesFamiliares af;
    private AntecedentesGenerales agen;
    private AntecedentesGinecologicos aginec;
    private int procedencia;
    private long dniOriginal;
    private boolean huboModificacion;
    
    /**
     * Creates new form DatosPaciente
     */
    public ABMPacienteCompleto(java.awt.Frame parent, boolean modal,int procedencia) {     //procedencia: 0 principal nuevo, 
                                                                                           // 1 principal modificar
                                                                                           // 2 historia clinica modificar
        super(parent, modal);
        initComponents();
        this.btnModificar.setVisible(false);
        this.btnModificar.setEnabled(false);
        daoPaciente = new DAOPaciente();
        daoObraSocial = new DAOObraSocial();
        obras = new LinkedList<>();
        this.procedencia = procedencia;
        llenarObrasSociales();
        if(procedencia == 0 || procedencia == 1)
        {
        padreP = (Principal) parent;
        padre = padreP;
        }
        else if(procedencia == 2)
        {
        hc = (HistoriaClinica) parent;
        padre = hc;
        }
        this.setLocationRelativeTo(parent);
        this.huboModificacion = false;
    }
    
    public ABMPacienteCompleto(java.awt.Frame parent, boolean modal,int procedencia, Paciente p)
    {
    super(parent, modal);
        initComponents();
        
        daoPaciente = new DAOPaciente();
        daoObraSocial = new DAOObraSocial();
        obras = new LinkedList<>();
        this.procedencia = procedencia;
        llenarObrasSociales();
        
        if(procedencia == 1)
             { 
             llenarCajas(p);
             this.p = p;
             dniOriginal = Long.parseLong(this.txtfDni.getText());
             padreP = (Principal) parent;
             padre = padreP;
             }

        else if(procedencia == 2)
        {
        this.btnModificar.setVisible(false);
        hc = (HistoriaClinica) parent;
        llenarCajas(p);
        this.p = p;
        dniOriginal = Long.parseLong(this.txtfDni.getText());
        }
        
        this.setLocationRelativeTo(parent);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpSangre = new javax.swing.ButtonGroup();
        tabbedPaneAntecedentes = new javax.swing.JTabbedPane();
        pnlGenerales = new javax.swing.JPanel();
        pnlPersonales = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtaPersonales = new javax.swing.JTextArea();
        pnlQuirurgicos = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtaQuirurgicos = new javax.swing.JTextArea();
        pnlToxicos = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtaToxicos = new javax.swing.JTextArea();
        pnlGinecologicos = new javax.swing.JPanel();
        lblstaticMenarca = new javax.swing.JLabel();
        lblstaticTelarca = new javax.swing.JLabel();
        lblstaticCiclosMens = new javax.swing.JLabel();
        lblstaticGestaciones = new javax.swing.JLabel();
        lblstaticDispareunia = new javax.swing.JLabel();
        lblstaticMenopausia = new javax.swing.JLabel();
        lblstaticSDPM = new javax.swing.JLabel();
        lblstaticDismenorrea = new javax.swing.JLabel();
        lblstaticPartos = new javax.swing.JLabel();
        lblstaticAnticoncep = new javax.swing.JLabel();
        lblstaticGinecObserv = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaGinecObserv = new javax.swing.JTextArea();
        txtfMenopausia = new javax.swing.JTextField();
        txtfTelarca = new javax.swing.JTextField();
        txtfMenarca = new javax.swing.JTextField();
        txtfAbortos = new javax.swing.JTextField();
        txtfAnticonceptivos = new javax.swing.JTextField();
        txtfCesareas = new javax.swing.JTextField();
        lblstaticSeparador2 = new javax.swing.JLabel();
        txtfPartos = new javax.swing.JTextField();
        lblstaticSeparador3 = new javax.swing.JLabel();
        txtfGestaciones = new javax.swing.JTextField();
        lblstaticGinecObserv1 = new javax.swing.JLabel();
        lblstaticSeparador4 = new javax.swing.JLabel();
        txtfVivos = new javax.swing.JTextField();
        txtfMuertos = new javax.swing.JTextField();
        txtfDuracionMenstrual = new javax.swing.JTextField();
        lblstaticSeparador5 = new javax.swing.JLabel();
        txtfPeriodoMenstrual = new javax.swing.JTextField();
        chkDispareunia = new javax.swing.JCheckBox();
        chkDismenorrea = new javax.swing.JCheckBox();
        chkSdpm = new javax.swing.JCheckBox();
        pnlFamiliares = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtaOncologicos = new javax.swing.JTextArea();
        lblstaticTiroides = new javax.swing.JLabel();
        lblstaticTensionA = new javax.swing.JLabel();
        txtfTiroides = new javax.swing.JTextField();
        lblstaticFamObservaciones = new javax.swing.JLabel();
        lblstaticDiabetes = new javax.swing.JLabel();
        lblstaticCA = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaFamObservaciones = new javax.swing.JTextArea();
        chkDiabetes = new javax.swing.JCheckBox();
        chkTiroides = new javax.swing.JCheckBox();
        chkHipertension = new javax.swing.JCheckBox();
        chkOncologicos = new javax.swing.JCheckBox();
        pnlDatosPersonales = new javax.swing.JPanel();
        lblstaticNombres = new javax.swing.JLabel();
        lblstaticApellidos = new javax.swing.JLabel();
        lblstaticTelefono = new javax.swing.JLabel();
        lblstaticFechaNacimiento = new javax.swing.JLabel();
        txtfNombres = new javax.swing.JTextField();
        txtfApellidos = new javax.swing.JTextField();
        txtfTelefono = new javax.swing.JTextField();
        txtfDni = new javax.swing.JTextField();
        lblstaticTelefono1 = new javax.swing.JLabel();
        ftxtfFechaNacimiento = new javax.swing.JFormattedTextField();
        lblstaticGrupoS = new javax.swing.JLabel();
        rbtnFactorPos = new javax.swing.JRadioButton();
        rbtnFactorNeg = new javax.swing.JRadioButton();
        lblstaticFactor = new javax.swing.JLabel();
        cmbGrupoS = new javax.swing.JComboBox();
        pnlObraSocial = new javax.swing.JPanel();
        cmbObraSocial = new javax.swing.JComboBox();
        btnNuevaObraSocial = new javax.swing.JButton();
        lblstaticNumAfiliado = new javax.swing.JLabel();
        txtfNumeroAfiliado = new javax.swing.JTextField();
        btnGuardarOS = new javax.swing.JButton();
        txtfNuevaObraSocial = new javax.swing.JTextField();
        btnCancelarOS = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnVolverAPrincipal = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuevo Paciente");
        setIconImages(getIconImages());

        tabbedPaneAntecedentes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Antecedentes"));
        tabbedPaneAntecedentes.setPreferredSize(new java.awt.Dimension(500, 300));

        pnlPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Personales"));

        txtaPersonales.setColumns(20);
        txtaPersonales.setLineWrap(true);
        txtaPersonales.setRows(5);
        txtaPersonales.setTabSize(0);
        txtaPersonales.setWrapStyleWord(true);
        txtaPersonales.setNextFocusableComponent(txtaQuirurgicos);
        txtaPersonales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaPersonalesKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(txtaPersonales);

        javax.swing.GroupLayout pnlPersonalesLayout = new javax.swing.GroupLayout(pnlPersonales);
        pnlPersonales.setLayout(pnlPersonalesLayout);
        pnlPersonalesLayout.setHorizontalGroup(
            pnlPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnlPersonalesLayout.setVerticalGroup(
            pnlPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        pnlQuirurgicos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Quirúrgicos"));

        txtaQuirurgicos.setColumns(20);
        txtaQuirurgicos.setLineWrap(true);
        txtaQuirurgicos.setRows(5);
        txtaQuirurgicos.setTabSize(0);
        txtaQuirurgicos.setWrapStyleWord(true);
        txtaQuirurgicos.setNextFocusableComponent(txtaToxicos);
        txtaQuirurgicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaQuirurgicosKeyTyped(evt);
            }
        });
        jScrollPane6.setViewportView(txtaQuirurgicos);

        javax.swing.GroupLayout pnlQuirurgicosLayout = new javax.swing.GroupLayout(pnlQuirurgicos);
        pnlQuirurgicos.setLayout(pnlQuirurgicosLayout);
        pnlQuirurgicosLayout.setHorizontalGroup(
            pnlQuirurgicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuirurgicosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        pnlQuirurgicosLayout.setVerticalGroup(
            pnlQuirurgicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuirurgicosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlToxicos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tóxicos"));

        txtaToxicos.setColumns(20);
        txtaToxicos.setLineWrap(true);
        txtaToxicos.setRows(5);
        txtaToxicos.setTabSize(0);
        txtaToxicos.setWrapStyleWord(true);
        txtaToxicos.setNextFocusableComponent(txtfMenarca);
        txtaToxicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaToxicosKeyTyped(evt);
            }
        });
        jScrollPane7.setViewportView(txtaToxicos);

        javax.swing.GroupLayout pnlToxicosLayout = new javax.swing.GroupLayout(pnlToxicos);
        pnlToxicos.setLayout(pnlToxicosLayout);
        pnlToxicosLayout.setHorizontalGroup(
            pnlToxicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToxicosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnlToxicosLayout.setVerticalGroup(
            pnlToxicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlToxicosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlGeneralesLayout = new javax.swing.GroupLayout(pnlGenerales);
        pnlGenerales.setLayout(pnlGeneralesLayout);
        pnlGeneralesLayout.setHorizontalGroup(
            pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlQuirurgicos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlToxicos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPersonales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        pnlGeneralesLayout.setVerticalGroup(
            pnlGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlQuirurgicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlToxicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPaneAntecedentes.addTab("Generales", pnlGenerales);

        lblstaticMenarca.setText("Menarca:");

        lblstaticTelarca.setText("Telarca:");

        lblstaticCiclosMens.setText("Ciclos Menstruales:");

        lblstaticGestaciones.setText("Gestaciones/Abortos:");

        lblstaticDispareunia.setText("Dispareunia:");

        lblstaticMenopausia.setText("Menopausia:");

        lblstaticSDPM.setText("SDPM:");

        lblstaticDismenorrea.setText("Dismenorrea:");

        lblstaticPartos.setText("Partos/Cesareas:");

        lblstaticAnticoncep.setText("Anticonceptivos:");

        lblstaticGinecObserv.setText("Vivos/Muertos:");

        txtaGinecObserv.setColumns(20);
        txtaGinecObserv.setLineWrap(true);
        txtaGinecObserv.setRows(5);
        txtaGinecObserv.setTabSize(0);
        txtaGinecObserv.setWrapStyleWord(true);
        txtaGinecObserv.setNextFocusableComponent(pnlFamiliares);
        txtaGinecObserv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaGinecObservKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtaGinecObserv);

        txtfMenopausia.setNextFocusableComponent(txtfDuracionMenstrual);
        txtfMenopausia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMenopausiaKeyTyped(evt);
            }
        });

        txtfTelarca.setNextFocusableComponent(txtfMenopausia);
        txtfTelarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTelarcaKeyTyped(evt);
            }
        });

        txtfMenarca.setNextFocusableComponent(txtfTelarca);
        txtfMenarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMenarcaKeyTyped(evt);
            }
        });

        txtfAbortos.setNextFocusableComponent(txtfPartos);
        txtfAbortos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfAbortosKeyTyped(evt);
            }
        });

        txtfAnticonceptivos.setNextFocusableComponent(txtfGestaciones);
        txtfAnticonceptivos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfAnticonceptivosKeyTyped(evt);
            }
        });

        txtfCesareas.setNextFocusableComponent(txtfVivos);
        txtfCesareas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfCesareasKeyTyped(evt);
            }
        });

        lblstaticSeparador2.setText("/");

        txtfPartos.setNextFocusableComponent(txtfCesareas);
        txtfPartos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfPartosKeyTyped(evt);
            }
        });

        lblstaticSeparador3.setText("/");

        txtfGestaciones.setNextFocusableComponent(txtfAbortos);
        txtfGestaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfGestacionesKeyTyped(evt);
            }
        });

        lblstaticGinecObserv1.setText("Observaciones:");

        lblstaticSeparador4.setText("/");

        txtfVivos.setNextFocusableComponent(txtfMuertos);
        txtfVivos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfVivosKeyTyped(evt);
            }
        });

        txtfMuertos.setNextFocusableComponent(txtaGinecObserv);
        txtfMuertos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfMuertosKeyTyped(evt);
            }
        });

        txtfDuracionMenstrual.setNextFocusableComponent(txtfPeriodoMenstrual);
        txtfDuracionMenstrual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfDuracionMenstrualKeyTyped(evt);
            }
        });

        lblstaticSeparador5.setText("/");

        txtfPeriodoMenstrual.setNextFocusableComponent(txtfAnticonceptivos);
        txtfPeriodoMenstrual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfPeriodoMenstrualKeyTyped(evt);
            }
        });

        chkDispareunia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        chkDismenorrea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        chkSdpm.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout pnlGinecologicosLayout = new javax.swing.GroupLayout(pnlGinecologicos);
        pnlGinecologicos.setLayout(pnlGinecologicosLayout);
        pnlGinecologicosLayout.setHorizontalGroup(
            pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblstaticGinecObserv1)
                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticGestaciones)
                            .addComponent(lblstaticCiclosMens)
                            .addComponent(lblstaticMenopausia)
                            .addComponent(lblstaticTelarca)
                            .addComponent(lblstaticMenarca)
                            .addComponent(lblstaticGinecObserv))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                                        .addComponent(txtfGestaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblstaticSeparador3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtfAbortos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtfMenarca, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfMenopausia, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfTelarca, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                                        .addComponent(txtfDuracionMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblstaticSeparador5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtfPeriodoMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(lblstaticPartos))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGinecologicosLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblstaticDismenorrea, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblstaticAnticoncep, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblstaticSDPM, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblstaticDispareunia, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                                .addComponent(txtfVivos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblstaticSeparador4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfMuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtfAnticonceptivos)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGinecologicosLayout.createSequentialGroup()
                                .addComponent(txtfPartos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblstaticSeparador2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfCesareas, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chkDispareunia, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkDismenorrea, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSdpm, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(jScrollPane2))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        pnlGinecologicosLayout.setVerticalGroup(
            pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticMenarca)
                    .addComponent(txtfMenarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticDispareunia)
                    .addComponent(chkDispareunia))
                .addGap(10, 10, 10)
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfTelarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticTelarca)
                            .addComponent(lblstaticDismenorrea))
                        .addGap(12, 12, 12)
                        .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstaticMenopausia)
                            .addComponent(txtfMenopausia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblstaticSDPM)))
                    .addGroup(pnlGinecologicosLayout.createSequentialGroup()
                        .addComponent(chkDismenorrea)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkSdpm)))
                .addGap(15, 15, 15)
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtfPeriodoMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfDuracionMenstrual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblstaticSeparador5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblstaticCiclosMens)
                        .addComponent(lblstaticAnticoncep)
                        .addComponent(txtfAnticonceptivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticGestaciones)
                    .addComponent(lblstaticPartos)
                    .addComponent(txtfAbortos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfPartos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticSeparador2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfGestaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticSeparador3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfCesareas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlGinecologicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticGinecObserv)
                    .addComponent(txtfMuertos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfVivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticSeparador4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(lblstaticGinecObserv1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        tabbedPaneAntecedentes.addTab("Ginecológicos", pnlGinecologicos);

        pnlFamiliares.setNextFocusableComponent(txtaFamObservaciones);
        pnlFamiliares.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtaOncologicos.setColumns(20);
        txtaOncologicos.setEditable(false);
        txtaOncologicos.setLineWrap(true);
        txtaOncologicos.setRows(2);
        txtaOncologicos.setWrapStyleWord(true);
        txtaOncologicos.setNextFocusableComponent(txtaFamObservaciones);
        jScrollPane4.setViewportView(txtaOncologicos);

        pnlFamiliares.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 127, 170, 57));

        lblstaticTiroides.setText("Tiroides:");
        pnlFamiliares.add(lblstaticTiroides, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        lblstaticTensionA.setText("Hipertensión Arterial:");
        pnlFamiliares.add(lblstaticTensionA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 49, -1, -1));

        txtfTiroides.setEditable(false);
        txtfTiroides.setNextFocusableComponent(txtaOncologicos);
        txtfTiroides.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtfTiroidesKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTiroidesKeyTyped(evt);
            }
        });
        pnlFamiliares.add(txtfTiroides, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 87, 170, -1));

        lblstaticFamObservaciones.setText("Observaciones:");
        pnlFamiliares.add(lblstaticFamObservaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 202, -1, -1));

        lblstaticDiabetes.setText("Diabetes:");
        pnlFamiliares.add(lblstaticDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        lblstaticCA.setText("Oncológicos:");
        pnlFamiliares.add(lblstaticCA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 131, -1, -1));

        txtaFamObservaciones.setColumns(20);
        txtaFamObservaciones.setLineWrap(true);
        txtaFamObservaciones.setRows(5);
        txtaFamObservaciones.setTabSize(0);
        txtaFamObservaciones.setWrapStyleWord(true);
        txtaFamObservaciones.setNextFocusableComponent(btnGuardar);
        txtaFamObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaFamObservacionesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtaFamObservaciones);

        pnlFamiliares.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 222, 543, 134));
        pnlFamiliares.add(chkDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 7, -1, -1));

        chkTiroides.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkTiroidesStateChanged(evt);
            }
        });
        pnlFamiliares.add(chkTiroides, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 86, -1, -1));
        pnlFamiliares.add(chkHipertension, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 45, -1, -1));

        chkOncologicos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkOncologicosStateChanged(evt);
            }
        });
        pnlFamiliares.add(chkOncologicos, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 127, -1, -1));

        tabbedPaneAntecedentes.addTab("Familiares", pnlFamiliares);

        pnlDatosPersonales.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Datos Personales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 14))); // NOI18N

        lblstaticNombres.setText("Nombres:");

        lblstaticApellidos.setText("Apellidos:");

        lblstaticTelefono.setText("Teléfono:");

        lblstaticFechaNacimiento.setText("Fecha de Nacimiento:");

        txtfNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNombresKeyTyped(evt);
            }
        });

        txtfApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfApellidosKeyTyped(evt);
            }
        });

        txtfTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTelefonoKeyTyped(evt);
            }
        });

        txtfDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfDniKeyTyped(evt);
            }
        });

        lblstaticTelefono1.setText("Nro. Doc.:");

        try {
            ftxtfFechaNacimiento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblstaticGrupoS.setText("Grupo Sanguíneo:");

        btngrpSangre.add(rbtnFactorPos);
        rbtnFactorPos.setText("+");

        btngrpSangre.add(rbtnFactorNeg);
        rbtnFactorNeg.setText("-");

        lblstaticFactor.setText("Factor:");

        cmbGrupoS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "AB", "0" }));

        pnlObraSocial.setBorder(javax.swing.BorderFactory.createTitledBorder("Obra Social"));

        cmbObraSocial.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbObraSocialItemStateChanged(evt);
            }
        });

        btnNuevaObraSocial.setText("Nueva");
        btnNuevaObraSocial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaObraSocialActionPerformed(evt);
            }
        });

        lblstaticNumAfiliado.setText("Nro. Afiliado:");

        txtfNumeroAfiliado.setEnabled(false);
        txtfNumeroAfiliado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNumeroAfiliadoKeyTyped(evt);
            }
        });

        btnGuardarOS.setText("Guardar");
        btnGuardarOS.setEnabled(false);
        btnGuardarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarOSActionPerformed(evt);
            }
        });

        txtfNuevaObraSocial.setEnabled(false);
        txtfNuevaObraSocial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfNuevaObraSocialKeyTyped(evt);
            }
        });

        btnCancelarOS.setText("Cancelar");
        btnCancelarOS.setEnabled(false);
        btnCancelarOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarOSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlObraSocialLayout = new javax.swing.GroupLayout(pnlObraSocial);
        pnlObraSocial.setLayout(pnlObraSocialLayout);
        pnlObraSocialLayout.setHorizontalGroup(
            pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlObraSocialLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardarOS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarOS, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlObraSocialLayout.createSequentialGroup()
                        .addComponent(lblstaticNumAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfNumeroAfiliado))
                    .addGroup(pnlObraSocialLayout.createSequentialGroup()
                        .addComponent(cmbObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNuevaObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtfNuevaObraSocial))
        );
        pnlObraSocialLayout.setVerticalGroup(
            pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlObraSocialLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevaObraSocial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtfNuevaObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarOS)
                    .addComponent(btnGuardarOS))
                .addGap(13, 13, 13)
                .addGroup(pnlObraSocialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfNumeroAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticNumAfiliado))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlDatosPersonalesLayout = new javax.swing.GroupLayout(pnlDatosPersonales);
        pnlDatosPersonales.setLayout(pnlDatosPersonalesLayout);
        pnlDatosPersonalesLayout.setHorizontalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticFechaNacimiento)
                            .addComponent(lblstaticGrupoS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(cmbGrupoS, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblstaticFactor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFactorPos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbtnFactorNeg))
                            .addComponent(ftxtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlObraSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblstaticTelefono1)
                            .addComponent(lblstaticTelefono)
                            .addComponent(lblstaticNombres, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblstaticApellidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfDni)
                            .addComponent(txtfNombres)
                            .addComponent(txtfApellidos)
                            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(39, 39, 39))
        );
        pnlDatosPersonalesLayout.setVerticalGroup(
            pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticNombres)
                    .addComponent(txtfNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticApellidos)
                    .addComponent(txtfApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticTelefono)
                    .addComponent(txtfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticTelefono1))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticFechaNacimiento)
                    .addComponent(ftxtfFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblstaticGrupoS)
                    .addComponent(cmbGrupoS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblstaticFactor)
                    .addComponent(rbtnFactorPos)
                    .addComponent(rbtnFactorNeg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlObraSocial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnGuardar.setText("Guardar");
        btnGuardar.setNextFocusableComponent(btnVolverAPrincipal);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnVolverAPrincipal.setText("Volver");
        btnVolverAPrincipal.setNextFocusableComponent(txtfNombres);
        btnVolverAPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverAPrincipalActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnVolverAPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(tabbedPaneAntecedentes, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVolverAPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tabbedPaneAntecedentes, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverAPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverAPrincipalActionPerformed
        this.dispose();
        if(huboModificacion){
            LinkedList<Paciente> pacienteList = new LinkedList<Paciente>();
            p = daoPaciente.getPacienteBasico(p.getDni());
            pacienteList.add(p);
            padreP.setListaPacientes(pacienteList);
        }
    }//GEN-LAST:event_btnVolverAPrincipalActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    af = new AntecedentesFamiliares();  
    agen = new AntecedentesGenerales();
    aginec = new AntecedentesGinecologicos();
    String error = comprobarObligatorias();
    if(!error.isEmpty())
        {
            MensajesValidaciones.mostrarError(this,"Debe completar los siguientes datos obligatorios: \n"+error);
            return;
        }   
    long dniPaciente = Long.parseLong(this.txtfDni.getText());
    
    if(procedencia == 0) //Principal, nuevo
    {
        
        if(daoPaciente.verificarPaciente(dniPaciente)){
            MensajesValidaciones.mostrarError(this, "El paciente ya se encuentra registrado. Corrija el DNI o búsquelo en la ventana principal.");
            this.txtfDni.setText("");
            return;
        }
    
        generarAntecedentes();
    
        if(!generarPaciente())
            return;
    
        if(daoPaciente.registrarPaciente(p))
        {
            MensajesValidaciones.mostrarInformacion(this,"Registro Exitoso.");
            hc = new HistoriaClinica(padre, p);
            hc.llenarCampos(p,1);
            this.dispose();
            hc.setVisible(true);
        }
        else{
            MensajesValidaciones.mostrarError(this,"Registro Fallido.");
        }
    }
    else if(procedencia == 1 || procedencia == 2)//Historia clinica(2), Principal(1) ; Modificar
    {
        if(dniPaciente != dniOriginal && daoPaciente.verificarPaciente(dniPaciente)){
            MensajesValidaciones.mostrarError(this,"El dni ingresado para la modificación ya se encuentra en la base de datos a nombre de otro paciente.\n"
                                             + " Corrija el DNI.");
            this.txtfDni.setText("");
            return;
        }
        
        
        generarAntecedentes();
    
    
        if(error.isEmpty())
        {
            if(!generarPaciente())
                return;
        }
    
        else
        {
            MensajesValidaciones.mostrarError(this,"Debe completar los siguientes campos obligatorios: \n"+error);
            return;
        }   
    
        if(daoPaciente.actualizarPaciente(p,dniOriginal))
        {
            MensajesValidaciones.mostrarInformacion(this,"Actualización Exitosa.");
            
                if(this.procedencia == 2)
                {
                    hc.setPaciente(p);
                    hc.llenarCampos(p,1);
                    this.dispose();
                    hc.setVisible(true);
                }
                
                else
                    huboModificacion = true;
        }
        else{
            MensajesValidaciones.mostrarError(this,"Actualización Fallida.");
        }
    }
    if(procedencia == 1)
    {
    cambiarEstadoCajas(false);
    this.btnModificar.setEnabled(true);
    this.btnGuardar.setEnabled(false);
    }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtfTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTelefonoKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfTelefono, evt, 45,this);
    }//GEN-LAST:event_txtfTelefonoKeyTyped

    private void txtfDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDniKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfDniKeyTyped

    private void txtfNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNombresKeyTyped
        MensajesValidaciones.negarNumeros(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfNombres,evt,45,this);
    }//GEN-LAST:event_txtfNombresKeyTyped

    private void txtfApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfApellidosKeyTyped
        MensajesValidaciones.negarNumeros(evt,this);
        MensajesValidaciones.limitarLargo(this.txtfApellidos,evt,45,this);
    }//GEN-LAST:event_txtfApellidosKeyTyped

    private void txtfPeriodoMenstrualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPeriodoMenstrualKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfPeriodoMenstrualKeyTyped

    private void txtfDuracionMenstrualKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfDuracionMenstrualKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfDuracionMenstrualKeyTyped

    private void txtfMuertosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMuertosKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfMuertosKeyTyped

    private void txtfVivosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfVivosKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfVivosKeyTyped

    private void txtfGestacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfGestacionesKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfGestacionesKeyTyped

    private void txtfPartosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfPartosKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfPartosKeyTyped

    private void txtfCesareasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfCesareasKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfCesareasKeyTyped

    private void txtfAbortosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfAbortosKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfAbortosKeyTyped

    private void txtfMenarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMenarcaKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfMenarcaKeyTyped

    private void txtfMenopausiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfMenopausiaKeyTyped
        MensajesValidaciones.negarLetras(evt,this);
    }//GEN-LAST:event_txtfMenopausiaKeyTyped

    private void chkTiroidesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkTiroidesStateChanged
    if(this.chkTiroides.isSelected())
        {
            this.txtfTiroides.setEditable(true);
            this.chkTiroides.nextFocus();
        }
    else
        {
        this.txtfTiroides.setEditable(false);
        this.txtfTiroides.setText("");
        }
    }//GEN-LAST:event_chkTiroidesStateChanged

    private void chkOncologicosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkOncologicosStateChanged
     if(this.chkOncologicos.isSelected())
        this.txtaOncologicos.setEditable(true);
    else
     {
        this.txtaOncologicos.setEditable(false);
        this.txtaOncologicos.setText("");
     }
    }//GEN-LAST:event_chkOncologicosStateChanged

    private void txtfTiroidesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTiroidesKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfTiroides, evt, 45,this);
        
    }//GEN-LAST:event_txtfTiroidesKeyTyped

    private void txtfTelarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTelarcaKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfTelarca, evt, 70,this);
    }//GEN-LAST:event_txtfTelarcaKeyTyped

    private void txtfAnticonceptivosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfAnticonceptivosKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfAnticonceptivos, evt, 70,this);
    }//GEN-LAST:event_txtfAnticonceptivosKeyTyped

    private void btnNuevaObraSocialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaObraSocialActionPerformed
        this.txtfNuevaObraSocial.setEnabled(true);
        this.btnGuardarOS.setEnabled(true);
        this.btnCancelarOS.setEnabled(true);
        this.btnNuevaObraSocial.setEnabled(false);
        this.cmbObraSocial.setEnabled(false);
    }//GEN-LAST:event_btnNuevaObraSocialActionPerformed

    private void txtfNumeroAfiliadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNumeroAfiliadoKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfNumeroAfiliado, evt, 45, this);
        MensajesValidaciones.validarNumeroAfiliado(evt, this);
    }//GEN-LAST:event_txtfNumeroAfiliadoKeyTyped

    private void btnGuardarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarOSActionPerformed
        if (this.txtfNuevaObraSocial.getText().isEmpty()) {
            MensajesValidaciones.mostrarError(this, "Ingrese un nombre de obra social válido...");
            return;
        }
        String nuevaObra = this.txtfNuevaObraSocial.getText();
        if (daoObraSocial.registrarObraSocial(new ObraSocial(0, nuevaObra))) {
            MensajesValidaciones.mostrarInformacion(this, "Registro Exitoso.");
            llenarObrasSociales();
        } else {
            MensajesValidaciones.mostrarError(this, "Registro Fallido.");
        }
        
        this.txtfNuevaObraSocial.setEnabled(false);
        this.btnGuardarOS.setEnabled(false);
        this.btnNuevaObraSocial.setEnabled(true);
        this.cmbObraSocial.setEnabled(true);
        this.cmbObraSocial.setSelectedItem(nuevaObra);
        this.txtfNuevaObraSocial.setText("");
    }//GEN-LAST:event_btnGuardarOSActionPerformed

    private void txtfNuevaObraSocialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfNuevaObraSocialKeyTyped
        MensajesValidaciones.limitarLargo(this.txtfNuevaObraSocial, evt, 80, this);
    }//GEN-LAST:event_txtfNuevaObraSocialKeyTyped

    private void btnCancelarOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarOSActionPerformed
        this.txtfNuevaObraSocial.setText("");
        this.txtfNuevaObraSocial.setEnabled(false);
        this.btnGuardarOS.setEnabled(false);
        this.btnCancelarOS.setEnabled(false);
        this.btnNuevaObraSocial.setEnabled(true);
        this.cmbObraSocial.setEnabled(true);
    }//GEN-LAST:event_btnCancelarOSActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.cambiarEstadoCajas(true);
        this.btnModificar.setEnabled(false);
        this.btnGuardar.setEnabled(true);
        
    }//GEN-LAST:event_btnModificarActionPerformed

private void cmbObraSocialItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbObraSocialItemStateChanged
    if(cmbObraSocial.getSelectedIndex() == 0)
    {
        txtfNumeroAfiliado.setText("");
        txtfNumeroAfiliado.setEnabled(false);
    }
    else
    {
        txtfNumeroAfiliado.setEnabled(true);
    }
}//GEN-LAST:event_cmbObraSocialItemStateChanged

private void txtaPersonalesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaPersonalesKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_TAB){
        txtaPersonales.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaPersonalesKeyTyped

private void txtaQuirurgicosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaQuirurgicosKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_TAB){
        txtaQuirurgicos.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaQuirurgicosKeyTyped

private void txtaToxicosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaToxicosKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_TAB)
        {   
            this.tabbedPaneAntecedentes.setSelectedComponent(this.pnlGinecologicos);
            this.txtaToxicos.nextFocus();
        } 
}//GEN-LAST:event_txtaToxicosKeyTyped

private void txtaFamObservacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaFamObservacionesKeyTyped
    if(evt.getKeyChar() == KeyEvent.VK_TAB){
        txtaFamObservaciones.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaFamObservacionesKeyTyped

    private void txtaGinecObservKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaGinecObservKeyTyped
        if(evt.getKeyChar() == KeyEvent.VK_TAB)
        {   
            this.tabbedPaneAntecedentes.setSelectedComponent(this.pnlFamiliares);
            this.txtaToxicos.nextFocus();
        } 
    }//GEN-LAST:event_txtaGinecObservKeyTyped

    private void txtfTiroidesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTiroidesKeyPressed
        if(evt.getKeyChar() == KeyEvent.VK_TAB)
        {   
            if(!this.chkOncologicos.isSelected())
            {
                this.txtfTiroides.setNextFocusableComponent(txtaFamObservaciones);
                this.txtfTiroides.nextFocus();
            }
        } 
    }//GEN-LAST:event_txtfTiroidesKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarOS;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarOS;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevaObraSocial;
    private javax.swing.JButton btnVolverAPrincipal;
    private javax.swing.ButtonGroup btngrpSangre;
    private javax.swing.JCheckBox chkDiabetes;
    private javax.swing.JCheckBox chkDismenorrea;
    private javax.swing.JCheckBox chkDispareunia;
    private javax.swing.JCheckBox chkHipertension;
    private javax.swing.JCheckBox chkOncologicos;
    private javax.swing.JCheckBox chkSdpm;
    private javax.swing.JCheckBox chkTiroides;
    private javax.swing.JComboBox cmbGrupoS;
    private javax.swing.JComboBox cmbObraSocial;
    private javax.swing.JFormattedTextField ftxtfFechaNacimiento;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblstaticAnticoncep;
    private javax.swing.JLabel lblstaticApellidos;
    private javax.swing.JLabel lblstaticCA;
    private javax.swing.JLabel lblstaticCiclosMens;
    private javax.swing.JLabel lblstaticDiabetes;
    private javax.swing.JLabel lblstaticDismenorrea;
    private javax.swing.JLabel lblstaticDispareunia;
    private javax.swing.JLabel lblstaticFactor;
    private javax.swing.JLabel lblstaticFamObservaciones;
    private javax.swing.JLabel lblstaticFechaNacimiento;
    private javax.swing.JLabel lblstaticGestaciones;
    private javax.swing.JLabel lblstaticGinecObserv;
    private javax.swing.JLabel lblstaticGinecObserv1;
    private javax.swing.JLabel lblstaticGrupoS;
    private javax.swing.JLabel lblstaticMenarca;
    private javax.swing.JLabel lblstaticMenopausia;
    private javax.swing.JLabel lblstaticNombres;
    private javax.swing.JLabel lblstaticNumAfiliado;
    private javax.swing.JLabel lblstaticPartos;
    private javax.swing.JLabel lblstaticSDPM;
    private javax.swing.JLabel lblstaticSeparador2;
    private javax.swing.JLabel lblstaticSeparador3;
    private javax.swing.JLabel lblstaticSeparador4;
    private javax.swing.JLabel lblstaticSeparador5;
    private javax.swing.JLabel lblstaticTelarca;
    private javax.swing.JLabel lblstaticTelefono;
    private javax.swing.JLabel lblstaticTelefono1;
    private javax.swing.JLabel lblstaticTensionA;
    private javax.swing.JLabel lblstaticTiroides;
    private javax.swing.JPanel pnlDatosPersonales;
    private javax.swing.JPanel pnlFamiliares;
    private javax.swing.JPanel pnlGenerales;
    private javax.swing.JPanel pnlGinecologicos;
    private javax.swing.JPanel pnlObraSocial;
    private javax.swing.JPanel pnlPersonales;
    private javax.swing.JPanel pnlQuirurgicos;
    private javax.swing.JPanel pnlToxicos;
    private javax.swing.JRadioButton rbtnFactorNeg;
    private javax.swing.JRadioButton rbtnFactorPos;
    private javax.swing.JTabbedPane tabbedPaneAntecedentes;
    private javax.swing.JTextArea txtaFamObservaciones;
    private javax.swing.JTextArea txtaGinecObserv;
    private javax.swing.JTextArea txtaOncologicos;
    private javax.swing.JTextArea txtaPersonales;
    private javax.swing.JTextArea txtaQuirurgicos;
    private javax.swing.JTextArea txtaToxicos;
    private javax.swing.JTextField txtfAbortos;
    private javax.swing.JTextField txtfAnticonceptivos;
    private javax.swing.JTextField txtfApellidos;
    private javax.swing.JTextField txtfCesareas;
    private javax.swing.JTextField txtfDni;
    private javax.swing.JTextField txtfDuracionMenstrual;
    private javax.swing.JTextField txtfGestaciones;
    private javax.swing.JTextField txtfMenarca;
    private javax.swing.JTextField txtfMenopausia;
    private javax.swing.JTextField txtfMuertos;
    private javax.swing.JTextField txtfNombres;
    private javax.swing.JTextField txtfNuevaObraSocial;
    private javax.swing.JTextField txtfNumeroAfiliado;
    private javax.swing.JTextField txtfPartos;
    private javax.swing.JTextField txtfPeriodoMenstrual;
    private javax.swing.JTextField txtfTelarca;
    private javax.swing.JTextField txtfTelefono;
    private javax.swing.JTextField txtfTiroides;
    private javax.swing.JTextField txtfVivos;
    // End of variables declaration//GEN-END:variables
 
    /**
     * Se genera el objeto paciente que se desea guardar en la base de datos!
     */
    private boolean generarPaciente() {
        String error;
        p = new Paciente();
        
        p.setNombre(this.txtfNombres.getText());
        p.setApellido(this.txtfApellidos.getText());
        p.setTelefono(this.txtfTelefono.getText());
        p.setDni(Long.parseLong(this.txtfDni.getText()));
        
        try {
            String dia = this.ftxtfFechaNacimiento.getText(0, 2);
            String mes = this.ftxtfFechaNacimiento.getText(3,2);
            String año = this.ftxtfFechaNacimiento.getText(6,4);
            
            error = MensajesValidaciones.corroborarFecha(dia,mes,año);
           
            if(!error.isEmpty())
            {
                MensajesValidaciones.mostrarError(this, "Los siguientes valores de la fecha no son válidos o están fuera de rango: \n" + error);
                return false;
            }
        } catch (BadLocationException ex) {
            Logger.getLogger(ABMPacienteCompleto.class.getName()).log(Level.SEVERE, null, ex);
        }
        p.setFechaNacimiento(this.ftxtfFechaNacimiento.getText());
        
        p.setGrupoSanguineo((String)this.cmbGrupoS.getSelectedItem());
        
        
        if(!this.rbtnFactorNeg.isSelected() && !this.rbtnFactorPos.isSelected())
        {
            MensajesValidaciones.mostrarError(this,"No se ha seleccionado ningún factor.");
            return false;
        }
        else
        {
            if(btngrpSangre.isSelected(this.rbtnFactorPos.getModel()))
                p.setFactor(true);
            else
                p.setFactor(false);
        }
        
        for (int i = 0; i < obras.size(); i++) {
            if(obras.get(i).getNombre().compareTo((String)cmbObraSocial.getSelectedItem()) == 0)
               p.setObraSocial(obras.get(i));
        }
        p.setNumeroAfiliado(this.txtfNumeroAfiliado.getText());
        p.setAntecGen(agen);
        p.setAntecGinec(aginec);
        p.setAntecFam(af);
        return true;
    }

    /**
     * metodo para la generacion de los antecedentes del paciente!
     */
    private void generarAntecedentes() {
        //Antecedentes generales
        agen = new AntecedentesGenerales();
        
            agen.setAntecedentesPersonales(this.txtaPersonales.getText());
            agen.setAntecedentesQuirurgicos(this.txtaQuirurgicos.getText());
            agen.setAntecedentesToxicos(this.txtaToxicos.getText());
      
       //Antecedentes Ginecologicos
       aginec = new AntecedentesGinecologicos();
            
            if(!this.txtfAbortos.getText().isEmpty())
                aginec.setAbortos(Integer.parseInt(this.txtfAbortos.getText()));
            
            aginec.setAnticonceptivos(this.txtfAnticonceptivos.getText());
            
            if(!this.txtfCesareas.getText().isEmpty())
                aginec.setCesareas(Integer.parseInt(this.txtfCesareas.getText()));
            
            aginec.setDismenorrea(this.chkDismenorrea.isSelected());
            aginec.setDispareunia(this.chkDispareunia.isSelected());
            
            if(!this.txtfDuracionMenstrual.getText().isEmpty())
                aginec.setDuracionMenstrual(Integer.parseInt(this.txtfDuracionMenstrual.getText()));
            
            if(!this.txtfGestaciones.getText().isEmpty())
                aginec.setGestaciones(Integer.parseInt(this.txtfGestaciones.getText()));
            
            if(!this.txtfMenarca.getText().isEmpty())
                aginec.setMenarca(Integer.parseInt(this.txtfMenarca.getText()));
            
            if(!this.txtfMenopausia.getText().isEmpty())
                aginec.setMenopausia(Integer.parseInt(this.txtfMenopausia.getText()));
            
            if(!this.txtfMuertos.getText().isEmpty())
                aginec.setMuertos(Integer.parseInt(this.txtfMuertos.getText()));
            
            aginec.setObservaciones(this.txtaGinecObserv.getText());
            
            if(!this.txtfPartos.getText().isEmpty())
                aginec.setPartos(Integer.parseInt(this.txtfPartos.getText()));
             
            if(!this.txtfPeriodoMenstrual.getText().isEmpty())
                aginec.setPeriodoMenstrual(Integer.parseInt(this.txtfPeriodoMenstrual.getText()));
            
            aginec.setSdpm(this.chkSdpm.isSelected());
            aginec.setTelarca(this.txtfTelarca.getText());
            
            if(!this.txtfVivos.getText().isEmpty())
                aginec.setVivos(Integer.parseInt(this.txtfVivos.getText()));
       //Antecedentes Familiares     
       af = new AntecedentesFamiliares();
       
            af.setDbt(this.chkDiabetes.isSelected());
            af.setDescripcionOncologicos(this.txtaOncologicos.getText());
            af.setDescripcionTiroides(this.txtfTiroides.getText());
            af.setHta(this.chkHipertension.isSelected());
            af.setObservaciones(this.txtaFamObservaciones.getText());
            af.setOncologicos(this.chkOncologicos.isSelected());
            af.setTiroides(this.chkTiroides.isSelected());
    }
    
    /**
     *comprueba que las cajas obligatorias esten completas
     * Obligatorias: nombres,apellidos,telefono,dni,fechaNacimiento,numeroAfiliado
     */
    private String comprobarObligatorias() {
        String incompletas="";
        
        if(this.txtfNombres.getText().isEmpty())
            incompletas+="Nombres \n";
        
        if(this.txtfApellidos.getText().isEmpty())
            incompletas+="Apellidos \n";
        
        if(this.txtfTelefono.getText().isEmpty())
            incompletas+="Teléfono \n";
        
        if(this.txtfDni.getText().isEmpty())
            incompletas+="Nro. de Documento \n";
        
        if(this.ftxtfFechaNacimiento.getText().compareTo("  /  /    ") == 0)
            incompletas+="Fecha de Nacimiento \n";
        
        if(this.txtfNumeroAfiliado.getText().isEmpty() && this.txtfNumeroAfiliado.isEnabled())
            incompletas+="Nro. de Afiliado \n";
        
        if(this.rbtnFactorNeg.isSelected() == false && this.rbtnFactorPos.isSelected() == false)
            incompletas +="Factor \n";
        
        if(this.chkTiroides.isSelected() && this.txtfTiroides.getText().isEmpty())
            incompletas+="Tipo de Tiroides \n";
        
        if(this.chkOncologicos.isSelected() && this.txtaOncologicos.getText().isEmpty())
            incompletas+="Descripción de Oncológicos \n";
        
        return incompletas;
    }
    
        
    /**
     * Metodo generico utilizado para llenar todos los datos.
     */
    private void llenarCajas(Paciente p) {
        String fecha;
        
        this.txtfNombres.setText(p.getNombre());
        this.txtfApellidos.setText(p.getApellido());
        this.txtfTelefono.setText(p.getTelefono());
        this.txtfDni.setText(p.getDni()+"");
        fecha = p.getFechaNacimiento().substring(8,10)+p.getFechaNacimiento().substring(5,7)+p.getFechaNacimiento().substring(0,4);
        this.ftxtfFechaNacimiento.setText(fecha);
        this.cmbObraSocial.setSelectedItem(p.getObraSocial().getNombre());
        this.txtfNumeroAfiliado.setText(p.getNumeroAfiliado());
        
        if(p.getFactor())
            this.btngrpSangre.setSelected(this.rbtnFactorPos.getModel(), true);
        else
            this.btngrpSangre.setSelected(this.rbtnFactorNeg.getModel(), true);
        
        this.txtaPersonales.setText(p.getAntecGen().getAntecedentesPersonales());
        this.txtaToxicos.setText(p.getAntecGen().getAntecedentesToxicos());
        this.txtaQuirurgicos.setText(p.getAntecGen().getAntecedentesQuirurgicos());
        this.txtaFamObservaciones.setText(p.getAntecFam().getObservaciones());
        this.txtaGinecObserv.setText(p.getAntecGinec().getObservaciones());
        this.txtfAbortos.setText(p.getAntecGinec().getAbortos()+"");
        this.txtfAnticonceptivos.setText(p.getAntecGinec().getAnticonceptivos());
        this.txtaOncologicos.setText(p.getAntecFam().getDescripcionOncologicos());
        this.txtfCesareas.setText(p.getAntecGinec().getCesareas()+"");
        this.txtfDuracionMenstrual.setText(p.getAntecGinec().getDuracionMenstrual()+"");
        this.txtfPeriodoMenstrual.setText(p.getAntecGinec().getPeriodoMenstrual()+"");
        this.txtfGestaciones.setText(p.getAntecGinec().getGestaciones()+"");
        this.txtfMenarca.setText(p.getAntecGinec().getMenarca()+"");
        this.txtfMuertos.setText(p.getAntecGinec().getMuertos()+"");
        this.txtfMenopausia.setText(p.getAntecGinec().getMenopausia()+"");
        this.txtfPartos.setText(p.getAntecGinec().getPartos()+""); 
        this.txtfTelarca.setText(p.getAntecGinec().getTelarca());
        this.txtfTiroides.setText(p.getAntecFam().getDescripcionTiroides());
        this.txtfVivos.setText(p.getAntecGinec().getVivos()+"");
        this.cmbGrupoS.setSelectedItem(p.getGrupoSanguineo());
        this.chkDiabetes.setSelected(p.getAntecFam().isDbt());
        this.chkDismenorrea.setSelected(p.getAntecGinec().isDismenorrea());
        this.chkDispareunia.setSelected(p.getAntecGinec().isDispareunia());
        this.chkHipertension.setSelected(p.getAntecFam().isHta());
        this.chkOncologicos.setSelected(p.getAntecFam().isOncologicos());
        this.chkSdpm.setSelected(p.getAntecGinec().isSdpm());
        this.chkTiroides.setSelected(p.getAntecFam().isTiroides());
    }
    
    /**
     * Metodo utilizado para llenar las obras sociales
     */
    private void llenarObrasSociales() {
        obras = new LinkedList<>();
        cmbObraSocial.removeAllItems();
        obras.add(new ObraSocial(0, "Sin Obra Social"));
        obras.addAll(daoObraSocial.getAllObrasSociales());
        for(int i = 0; i<obras.size(); i++)
            cmbObraSocial.addItem(obras.get(i).getNombre());
        cmbObraSocial.setSelectedIndex(0);
    }

    /**
     * Metodo utilizado para limpiar las cajas
     */
    private void limpiar() {
        
        this.txtfNombres.setText("");
        this.txtfApellidos.setText("");
        this.txtfTelefono.setText("");
        this.txtfDni.setText("");
        this.ftxtfFechaNacimiento.setText("");
        this.cmbGrupoS.setSelectedIndex(0);
        this.rbtnFactorNeg.setSelected(false);
        this.rbtnFactorPos.setSelected(false);
        this.cmbObraSocial.setSelectedIndex(0);
        this.txtfNumeroAfiliado.setText("");
        this.txtaPersonales.setText("");
        this.txtaToxicos.setText("");
        this.txtaQuirurgicos.setText("");
        this.txtaFamObservaciones.setText("");
        this.txtaGinecObserv.setText("");
        this.txtfAbortos.setText("");
        this.txtfAnticonceptivos.setText("");
        this.txtaOncologicos.setText("");
        this.txtfCesareas.setText("");
        this.txtfDuracionMenstrual.setText("");
        this.txtfPeriodoMenstrual.setText("");
        this.txtfGestaciones.setText("");
        this.txtfMenarca.setText("");
        this.txtfMenopausia.setText("");
        this.txtfPartos.setText("");
        this.txtfTelarca.setText("");
        this.txtfTiroides.setText("");
        this.txtfVivos.setText("");
        this.txtfMuertos.setText("");
        this.rbtnFactorNeg.setSelected(false);
        this.rbtnFactorPos.setSelected(false);
        this.chkDiabetes.setSelected(false);
        this.chkDismenorrea.setSelected(false);
        this.chkDispareunia.setSelected(false);
        this.chkHipertension.setSelected(false);
        this.chkOncologicos.setSelected(false);
        this.chkSdpm.setSelected(false);
        this.chkTiroides.setSelected(false);
        this.txtfTiroides.setEditable(false);
        this.txtaOncologicos.setEditable(false);
    }
    
    /**
     * Metodo utilizado para cambiar el estado de las cajas (Habilitadas, Deshabilitadas)
     * @param b true (Habilitadas), false ()Deshabilitadas
     */
    private void cambiarEstadoCajas(boolean b) {
        this.txtfNombres.setEditable(b);
        this.txtfApellidos.setEditable(b);
        this.txtfTelefono.setEditable(b);
        this.txtfDni.setEditable(b);
        this.ftxtfFechaNacimiento.setEditable(b);
        this.cmbObraSocial.setEnabled(b);
        this.cmbGrupoS.setEnabled(b);
        this.rbtnFactorNeg.setEnabled(b);
        this.rbtnFactorPos.setEnabled(b);
        this.txtfNumeroAfiliado.setEditable(b);
        this.txtaPersonales.setEditable(b);
        this.txtaToxicos.setEditable(b);
        this.txtaQuirurgicos.setEditable(b);
        this.txtaFamObservaciones.setEditable(b);
        this.txtaGinecObserv.setEditable(b);
        this.txtfAbortos.setEditable(b);
        this.txtfAnticonceptivos.setEditable(b);
        this.txtaOncologicos.setEditable(b);
        this.txtfCesareas.setEditable(b);
        this.txtfDuracionMenstrual.setEditable(b);
        this.txtfPeriodoMenstrual.setEditable(b);
        this.txtfGestaciones.setEditable(b);
        this.txtfMenarca.setEditable(b);
        this.txtfMenopausia.setEditable(b);
        this.txtfPartos.setEditable(b);
        this.txtfTelarca.setEditable(b);
        this.txtfTiroides.setEditable(b);
        this.txtfVivos.setEditable(b);
        this.txtfMuertos.setEditable(b);
        this.rbtnFactorNeg.setEnabled(b);
        this.rbtnFactorPos.setEnabled(b);
        this.chkDiabetes.setEnabled(b);
        this.chkDismenorrea.setEnabled(b);
        this.chkDispareunia.setEnabled(b);
        this.chkHipertension.setEnabled(b);
        this.chkOncologicos.setEnabled(b);
        this.chkSdpm.setEnabled(b);
        this.chkTiroides.setEnabled(b);
        this.txtfTiroides.setEditable(b);
        this.txtaOncologicos.setEditable(b);
        this.btnNuevaObraSocial.setEnabled(b);
    }
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }

}
