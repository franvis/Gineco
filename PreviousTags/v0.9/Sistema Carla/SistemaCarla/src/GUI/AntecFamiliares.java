/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import ClasesBase.AntecedentesFamiliares;
import ClasesBase.MensajesValidaciones;
import ClasesBase.Paciente;
import DAO.DAOAntecedentesFamiliares;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JButton;

public class AntecFamiliares extends javax.swing.JDialog {
    private AntecedentesFamiliares afam;
    private DAOAntecedentesFamiliares daoAntecFam;
    private Paciente paciente;
    
    /**
     * Creates new form AntecFamiliares
     */
    public AntecFamiliares(java.awt.Frame parent, boolean modal,Paciente p) {
        super(parent, modal);
        initComponents();
        paciente = p;
        daoAntecFam = new DAOAntecedentesFamiliares();
        llenarCajas(p);
        CambiarEstadoCajas(false);
        this.btnModificar.grabFocus();
        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpDiabetes = new javax.swing.ButtonGroup();
        btngrpHA = new javax.swing.ButtonGroup();
        btngrpCancer = new javax.swing.ButtonGroup();
        btngrpTiroides = new javax.swing.ButtonGroup();
        pnlAfecciones = new javax.swing.JPanel();
        txtfTiroides = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtaOncologicos = new javax.swing.JTextArea();
        chkDiabetes = new javax.swing.JCheckBox();
        chkTiroides = new javax.swing.JCheckBox();
        chkHipertension = new javax.swing.JCheckBox();
        chkOncologicos = new javax.swing.JCheckBox();
        pnlBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaFamObservaciones = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Antecedentes Familiares");
        setResizable(false);

        pnlAfecciones.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true)));

        txtfTiroides.setEditable(false);
        txtfTiroides.setNextFocusableComponent(chkOncologicos);
        txtfTiroides.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtfTiroidesKeyTyped(evt);
            }
        });

        txtaOncologicos.setColumns(16);
        txtaOncologicos.setEditable(false);
        txtaOncologicos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtaOncologicos.setRows(2);
        txtaOncologicos.setTabSize(0);
        txtaOncologicos.setWrapStyleWord(true);
        txtaOncologicos.setEnabled(false);
        txtaOncologicos.setNextFocusableComponent(txtaFamObservaciones);
        txtaOncologicos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaOncologicosKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(txtaOncologicos);

        chkDiabetes.setText("Diabetes");
        chkDiabetes.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkDiabetes.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkDiabetes.setIconTextGap(59);
        chkDiabetes.setNextFocusableComponent(chkHipertension);

        chkTiroides.setText("Tiroides");
        chkTiroides.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkTiroides.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkTiroides.setIconTextGap(65);
        chkTiroides.setNextFocusableComponent(txtfTiroides);
        chkTiroides.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkTiroidesStateChanged(evt);
            }
        });

        chkHipertension.setText("Hipertensión Arterial");
        chkHipertension.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkHipertension.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkHipertension.setNextFocusableComponent(chkTiroides);

        chkOncologicos.setText("Oncológicos");
        chkOncologicos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkOncologicos.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkOncologicos.setIconTextGap(45);
        chkOncologicos.setNextFocusableComponent(txtaOncologicos);
        chkOncologicos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkOncologicosStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlAfeccionesLayout = new javax.swing.GroupLayout(pnlAfecciones);
        pnlAfecciones.setLayout(pnlAfeccionesLayout);
        pnlAfeccionesLayout.setHorizontalGroup(
            pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAfeccionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAfeccionesLayout.createSequentialGroup()
                        .addGroup(pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAfeccionesLayout.createSequentialGroup()
                                .addGroup(pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chkHipertension, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkDiabetes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkTiroides, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtfTiroides))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAfeccionesLayout.createSequentialGroup()
                                .addGap(0, 107, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(23, 23, 23))
                    .addGroup(pnlAfeccionesLayout.createSequentialGroup()
                        .addComponent(chkOncologicos, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnlAfeccionesLayout.setVerticalGroup(
            pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAfeccionesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(chkDiabetes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkHipertension)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAfeccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTiroides)
                    .addComponent(txtfTiroides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkOncologicos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pnlBotones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnGuardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 51, 102));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save_enabled.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGuardar.setEnabled(false);
        btnGuardar.setNextFocusableComponent(btnCancelar);
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(0, 51, 102));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancel_enabled.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelar.setEnabled(false);
        btnCancelar.setNextFocusableComponent(btnModificar);
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarMouseExited(evt);
            }
        });
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnVolver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 51, 102));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/home_enabled.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVolver.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverMouseExited(evt);
            }
        });
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 51, 102));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_enabled.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnModificar.setNextFocusableComponent(chkDiabetes);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarMouseExited(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBotonesLayout = new javax.swing.GroupLayout(pnlBotones);
        pnlBotones.setLayout(pnlBotonesLayout);
        pnlBotonesLayout.setHorizontalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBotonesLayout.createSequentialGroup()
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlBotonesLayout.setVerticalGroup(
            pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 51, 102))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaFamObservaciones.setColumns(20);
        txtaFamObservaciones.setEditable(false);
        txtaFamObservaciones.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtaFamObservaciones.setRows(5);
        txtaFamObservaciones.setTabSize(0);
        txtaFamObservaciones.setWrapStyleWord(true);
        txtaFamObservaciones.setNextFocusableComponent(btnGuardar);
        txtaFamObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaFamObservacionesKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtaFamObservaciones);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlAfecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAfecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
    this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
     this.chkDiabetes.grabFocus();
     CambiarEstadoCajas(true);
     this.btnGuardar.setEnabled(true);
     this.btnModificar.setEnabled(false);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    afam = new AntecedentesFamiliares();
    afam.setDbt(this.chkDiabetes.isSelected());
    afam.setHta(this.chkHipertension.isSelected());
    afam.setOncologicos(this.chkOncologicos.isSelected());
    afam.setTiroides(this.chkTiroides.isSelected());
    afam.setDescripcionOncologicos(this.txtaOncologicos.getText());
    afam.setDescripcionTiroides(this.txtfTiroides.getText());
    afam.setObservaciones(this.txtaFamObservaciones.getText());
    if(daoAntecFam.actualizarAntecedente(afam, paciente.getDni()))
        MensajesValidaciones.mostrarInformacion(this, "Actualización Exitosa.");
    else
        MensajesValidaciones.mostrarError(this, "Actualización Fallida.");
    paciente.setAntecFam(afam);
    CambiarEstadoCajas(false);
    this.btnGuardar.setEnabled(false);
    this.btnModificar.setEnabled(true);
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void chkTiroidesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkTiroidesStateChanged
     if(!this.chkTiroides.isSelected())
        {
        this.txtfTiroides.setEnabled(false);
        this.txtfTiroides.setText("");
        }
        else
        {
            this.txtfTiroides.grabFocus();
            this.txtfTiroides.setEnabled(true);
            this.txtfTiroides.setText("");
        }
    }//GEN-LAST:event_chkTiroidesStateChanged

    private void chkOncologicosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkOncologicosStateChanged
     if(!this.chkOncologicos.isSelected())
        {
        this.txtaOncologicos.setEnabled(false);
        this.txtaOncologicos.setText("");
        }
     else
     {
        this.txtaOncologicos.grabFocus();
        this.txtaOncologicos.setEnabled(true);
     }
    }//GEN-LAST:event_chkOncologicosStateChanged

    private void txtfTiroidesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfTiroidesKeyTyped
         MensajesValidaciones.limitarLargo(this.txtfTiroides, evt, 45,this);
    }//GEN-LAST:event_txtfTiroidesKeyTyped

private void txtaFamObservacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaFamObservacionesKeyPressed
    if(evt.getKeyChar() == KeyEvent.VK_TAB)
    {
        this.txtaFamObservaciones.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaFamObservacionesKeyPressed

private void txtaOncologicosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaOncologicosKeyPressed
    if(evt.getKeyChar() == KeyEvent.VK_TAB)
    {
        this.txtaOncologicos.nextFocus();
        evt.consume();
    }
}//GEN-LAST:event_txtaOncologicosKeyPressed

    private void btnModificarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseEntered
        this.setearLabels(btnModificar, true);
    }//GEN-LAST:event_btnModificarMouseEntered

    private void btnModificarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseExited
        this.setearLabels(btnModificar, false);
    }//GEN-LAST:event_btnModificarMouseExited

    private void btnCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseEntered
        this.setearLabels(btnCancelar, true);
    }//GEN-LAST:event_btnCancelarMouseEntered

    private void btnCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseExited
        this.setearLabels(btnCancelar, false);
    }//GEN-LAST:event_btnCancelarMouseExited

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        this.setearLabels(btnGuardar, true);
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        this.setearLabels(btnGuardar, false);
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseEntered
        this.setearLabels(btnVolver, true);
    }//GEN-LAST:event_btnVolverMouseEntered

    private void btnVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverMouseExited
        this.setearLabels(btnVolver, false);
    }//GEN-LAST:event_btnVolverMouseExited

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.llenarCajas(paciente);
        this.CambiarEstadoCajas(false);
        this.btnGuardar.setEnabled(false);
        this.btnModificar.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void setearLabels(JButton jbtn, boolean entrada){
        if(jbtn.isEnabled())
            if (entrada) {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 13));
            }
            else {
                jbtn.setFont(new java.awt.Font("Tahoma", 1, 12));
            }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVolver;
    private javax.swing.ButtonGroup btngrpCancer;
    private javax.swing.ButtonGroup btngrpDiabetes;
    private javax.swing.ButtonGroup btngrpHA;
    private javax.swing.ButtonGroup btngrpTiroides;
    private javax.swing.JCheckBox chkDiabetes;
    private javax.swing.JCheckBox chkHipertension;
    private javax.swing.JCheckBox chkOncologicos;
    private javax.swing.JCheckBox chkTiroides;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel pnlAfecciones;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JTextArea txtaFamObservaciones;
    private javax.swing.JTextArea txtaOncologicos;
    private javax.swing.JTextField txtfTiroides;
    // End of variables declaration//GEN-END:variables
    /**
     * Metodo generico utilizado para llenar todos los datos.
     * @param p Paciente que contiene todos los datos para llenar
     */
    private void llenarCajas(Paciente p) {
        this.txtaFamObservaciones.setText(p.getAntecFam().getObservaciones());
        this.txtaOncologicos.setText(p.getAntecFam().getDescripcionOncologicos());
        this.txtfTiroides.setText(p.getAntecFam().getDescripcionTiroides());
        
        if(p.getAntecFam().isTiroides())
            this.chkTiroides.setSelected(true);
        
        if(p.getAntecFam().isOncologicos())
            this.chkOncologicos.setSelected(true);
        
        if(p.getAntecFam().isDbt())
            this.chkDiabetes.setSelected(true);
        
        if(p.getAntecFam().isHta())
            this.chkHipertension.setSelected(true);
    }
    
    /**
     * Metodo utilizado para cambiar el estado de las cajas (Habilitadas, Deshabilitadas)
     * @param accion true (Habilitadas), false ()Deshabilitadas
     */
    private void CambiarEstadoCajas(boolean accion)
    {
        this.txtaFamObservaciones.setEditable(accion);
        this.txtaOncologicos.setEditable(accion);
        this.txtfTiroides.setEditable(accion);
        this.chkTiroides.setEnabled(accion);
        this.chkOncologicos.setEnabled(accion);
        this.chkDiabetes.setEnabled(accion);
        this.chkHipertension.setEnabled(accion);
        this.btnCancelar.setEnabled(accion);
    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }
}
